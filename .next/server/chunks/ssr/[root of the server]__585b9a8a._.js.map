{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/scroll-area.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/StarMap.tsx"],"sourcesContent":["\n'use client';\n\nimport type { StarSystem as StarSystemType, Fleet as FleetType, DustCloud as DustCloudType, EntryPoint as EntryPointType, Player as PlayerType, GameState, HexPosition, VisualMapLabel, CommandPost } from '@/types/game';\nimport { Rocket, Flag, MousePointerClick } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { useMemo } from 'react';\n\n// Helper function to convert offset coordinates (col, row) to axial coordinates (q, r, s)\n// Assumes \"odd-q\" vertical layout (odd columns are shifted down)\nconst offsetToAxial = (hex: HexPosition): { q: number; r: number; s: number } => {\n  const q = hex.col;\n  const r = hex.row - (hex.col - (hex.col & 1)) / 2;\n  return { q, r, s: -q - r };\n};\n\n// Helper function to calculate distance between two hexes using axial coordinates\nexport const hexDistance = (a: HexPosition, b: HexPosition): number => {\n  const aAxial = offsetToAxial(a);\n  const bAxial = offsetToAxial(b);\n  return (Math.abs(aAxial.q - bAxial.q) + Math.abs(aAxial.r - bAxial.r) + Math.abs(aAxial.s - bAxial.s)) / 2;\n};\n\n\ninterface StarMapProps {\n  starSystems: StarSystemType[];\n  fleets: FleetType[];\n  commandPosts: CommandPost[];\n  dustClouds: DustCloudType[];\n  entryPoints: EntryPointType[];\n  visualMapLabels: VisualMapLabel[];\n  mapSettings: GameState['mapSettings'];\n  showFogOfWar: boolean;\n  currentPlayerId: string;\n  players: PlayerType[];\n  selectedStarSystemId: string | null;\n  onStarSystemClick: (systemId: string) => void; // Kept for direct star system info\n  onMapElementClick: (id: string | null, type: 'star-system' | 'fleet' | 'hex', position?: HexPosition) => void; // For fleet selection and hex targeting\n  isProductionTurn?: boolean;\n  selectedFleetId: string | null;\n  isMovingFleet: boolean;\n}\n\nfunction getColumnLabel(colIndex: number): string {\n  if (colIndex < 0) return '';\n  let label = '';\n  let num = colIndex;\n  while (num >= 0) {\n    label = String.fromCharCode((num % 26) + 'A'.charCodeAt(0)) + label;\n    num = Math.floor(num / 26) - 1;\n  }\n  return label;\n}\n\nexport function parseAlphanumericCoordinate(alphanumCoord: string): HexPosition | null {\n  const match = alphanumCoord.match(/^([A-Z]+)([0-9]+)/i);\n  if (!match) {\n    console.warn(`Invalid coordinate format: ${alphanumCoord}`);\n    return null;\n  }\n\n  const colStr = match[1].toUpperCase();\n  const rowStr = match[2];\n\n  let col = -1;\n  if (colStr.length === 1) {\n    col = colStr.charCodeAt(0) - 'A'.charCodeAt(0);\n  } else if (colStr.length === 2) {\n    const char1Val = colStr.charCodeAt(0) - 'A'.charCodeAt(0);\n    const char2Val = colStr.charCodeAt(1) - 'A'.charCodeAt(0);\n    col = (char1Val + 1) * 26 + char2Val;\n  } else {\n    console.warn(`Invalid column string in coordinate (supports 1 or 2 letters): ${colStr}`);\n    return null;\n  }\n\n  const row = parseInt(rowStr, 10) - 1;\n\n  if (isNaN(row) || row < 0) {\n    console.warn(`Invalid row number in coordinate: ${rowStr}`);\n    return null;\n  }\n\n  return { col, row };\n}\n\nexport function getStarSvgFillColor(colorName?: string): string {\n  switch (colorName?.toLowerCase()) {\n    case \"red\": return \"rgb(206, 0, 0)\";\n    case \"orange\": return \"rgb(247, 77, 0)\";\n    case \"yellow\": return \"rgb(255, 235, 0)\";\n    case \"green\": return \"rgb(0, 156, 0)\";\n    case \"blue\": return \"rgb(0, 107, 237)\";\n    default: return \"rgb(220, 220, 220)\";\n  }\n}\n\n// Using the last known good version of isHexVisible\nfunction isHexVisible(q: number, r: number, mapSettings: GameState['mapSettings']): boolean {\n    if (q === 0) {\n        return false;\n    }\n    if (r === 0 && q % 2 == 0) {\n        return false;\n    }\n    if (q === 1 && r > 0 && r < 21) {\n        return false;\n    }\n    if (r === 0 && q > 1 && q < 34) {\n        return false;\n    }\n    if (q === 34 && r > 1 && r < 21) {\n        return false;\n    }\n    if (r === 21 && q == 1) {\n        return true;\n    }\n    if (r === 21 && q % 2 !== 0) {\n        return false;\n    }\n    return true;\n  \n}\n\n\nconst Hexagon: React.FC<{\n  q: number;\n  r: number;\n  hexSize: number;\n  fill?: string;\n  stroke?: string;\n  strokeWidth?: number;\n  children?: React.ReactNode;\n  onClick?: () => void;\n  tooltip?: string | React.ReactNode;\n  coordinateLabel?: string;\n  isClickable?: boolean;\n  showMoveTargetIndicator?: boolean;\n}> = ({ q, r, hexSize, fill = 'transparent', stroke = 'hsl(var(--muted-foreground))', strokeWidth = 0.5, children, onClick, tooltip, coordinateLabel, isClickable = true, showMoveTargetIndicator = false }) => {\n  const W_FLAT = 2 * hexSize;\n  const H_FLAT = Math.sqrt(3) * hexSize;\n  const mapPadding = hexSize * 0.5;\n\n  const centerX = mapPadding + (W_FLAT / 2) + q * (W_FLAT * 0.75);\n  let centerY = mapPadding + (H_FLAT / 2) + r * H_FLAT;\n  if (q % 2 !== 0) {\n    centerY += H_FLAT / 2;\n  }\n\n  const points = Array.from({ length: 6 })\n    .map((_, i) => {\n      const angleDeg = 60 * i;\n      const angleRad = Math.PI / 180 * angleDeg;\n      return `${centerX + hexSize * Math.cos(angleRad)},${centerY + hexSize * Math.sin(angleRad)}`;\n    })\n    .join(' ');\n\n  const polygon = (\n    <polygon\n      points={points}\n      fill={fill}\n      stroke={stroke}\n      strokeWidth={strokeWidth}\n      onClick={isClickable ? onClick : undefined}\n      className={isClickable && onClick ? 'cursor-pointer hover:stroke-ring hover:stroke-2' : 'cursor-default'}\n      style={{ pointerEvents: 'all' }}\n    />\n  );\n\n  const textElement = coordinateLabel ? (\n    <text\n      x={centerX}\n      y={centerY - H_FLAT * 0.40 }\n      fontSize={hexSize * 0.3}\n      fill=\"hsla(var(--foreground), 0.5)\"\n      textAnchor=\"middle\"\n      dominantBaseline=\"middle\"\n      style={{ pointerEvents: 'none', userSelect: 'none' }}\n    >\n      {coordinateLabel}\n    </text>\n  ) : null;\n\n  const childrenElement = children ? (\n    <g transform={`translate(${centerX}, ${centerY})`} style={{ pointerEvents: 'none' }}>\n      {children}\n    </g>\n  ) : null;\n  \n  const moveTargetIndicatorElement = showMoveTargetIndicator ? (\n     <MousePointerClick x={centerX - hexSize * 0.25} y={centerY - hexSize * 0.25} width={hexSize*0.5} height={hexSize*0.5} color=\"hsl(var(--ring))\" />\n  ) : null;\n\n  const gContent = (\n    <g>\n      {polygon}\n      {textElement}\n      {childrenElement}\n      {moveTargetIndicatorElement}\n    </g>\n  );\n\n  if (tooltip && typeof tooltip === 'string' && !onClick) {\n    return <g title={tooltip}>{gContent}</g>;\n  }\n\n  return gContent;\n};\n\n\nconst StarMap: React.FC<StarMapProps> = ({\n  starSystems,\n  fleets,\n  commandPosts,\n  dustClouds,\n  entryPoints,\n  visualMapLabels,\n  mapSettings,\n  showFogOfWar,\n  currentPlayerId,\n  players,\n  selectedStarSystemId,\n  onStarSystemClick,\n  onMapElementClick,\n  isProductionTurn = false,\n  selectedFleetId,\n  isMovingFleet,\n}) => {\n  const { cols, rowsEven, rowsOdd, hexSize } = mapSettings;\n\n  const dustCloudCoordinatesSet = useMemo(() => {\n    const set = new Set<string>();\n    dustClouds.forEach(cloud => {\n      if (isHexVisible(cloud.position.col, cloud.position.row, mapSettings)) {\n        set.add(`${cloud.position.col}_${cloud.position.row}`);\n      }\n    });\n    return set;\n  }, [dustClouds, mapSettings]);\n\n  const starSystemCoordinatesSet = useMemo(() => {\n    const set = new Set<string>();\n    starSystems.forEach(system => {\n      if (isHexVisible(system.position.col, system.position.row, mapSettings)) {\n        set.add(`${system.position.col}_${system.position.row}`);\n      }\n    });\n    return set;\n  }, [starSystems, mapSettings]);\n\n  const currentPlayerCommandPosts = useMemo(() => {\n    return commandPosts.filter(cp => cp.owner === currentPlayerId);\n  }, [commandPosts, currentPlayerId]);\n\n  const inRangeHexes = useMemo(() => {\n    const rangeSet = new Set<string>();\n    if (currentPlayerCommandPosts.length === 0) return rangeSet;\n\n    for (let q_iter = 0; q_iter < cols; q_iter++) {\n      const maxRows = q_iter % 2 !== 0 ? rowsOdd : rowsEven;\n      for (let r_iter = 0; r_iter < maxRows; r_iter++) {\n        if (isHexVisible(q_iter, r_iter, mapSettings)) {\n          const currentHexPos: HexPosition = { col: q_iter, row: r_iter };\n          for (const cp of currentPlayerCommandPosts) {\n            if (hexDistance(currentHexPos, cp.position) <= 8) {\n              rangeSet.add(`${q_iter}_${r_iter}`);\n              break; \n            }\n          }\n        }\n      }\n    }\n    return rangeSet;\n  }, [cols, rowsOdd, rowsEven, mapSettings, currentPlayerCommandPosts]);\n\n\n  const hexGridCellWidth = 2 * hexSize * 0.75;\n  const hexGridCellHeight = Math.sqrt(3) * hexSize;\n  const mapPadding = hexSize * 0.5;\n\n  let gridContentWidth = 0;\n  if (cols > 0) {\n    gridContentWidth = ( (cols -1) * hexGridCellWidth ) + (2 * hexSize) ;\n  }\n\n  let gridContentHeight = 0;\n  if (cols > 0) {\n    let hasEvenCols = false;\n    let hasOddCols = false;\n    for(let i = 0; i < cols; i++) {\n        if (i % 2 === 0) hasEvenCols = true;\n        else hasOddCols = true;\n    }\n    if (hasOddCols && hasEvenCols) {\n        gridContentHeight = Math.max(rowsEven * hexGridCellHeight, (rowsOdd * hexGridCellHeight) + (hexGridCellHeight / 2));\n    } else if (hasEvenCols) {\n        gridContentHeight = rowsEven * hexGridCellHeight;\n    } else if (hasOddCols) {\n        gridContentHeight = (rowsOdd * hexGridCellHeight) + (hexGridCellHeight / 2);\n    }\n    if (gridContentHeight > 0) gridContentHeight += hexGridCellHeight * 0.25;\n  }\n\n\n  if (cols === 0 || (rowsEven === 0 && rowsOdd === 0)) {\n      gridContentWidth = 0;\n      gridContentHeight = 0;\n  }\n\n  const totalViewBoxWidth = gridContentWidth + 2 * mapPadding;\n  const totalViewBoxHeight = gridContentHeight + 2 * mapPadding;\n\n  return (\n    <Card\n      className={`shadow-xl inline-block bg-transparent ${isProductionTurn && !isMovingFleet ? 'cursor-not-allowed opacity-75' : ''}`}\n    >\n      <CardContent className=\"p-0 relative\">\n        <svg\n          viewBox={`0 0 ${totalViewBoxWidth || (2 * hexSize + 2*mapPadding)} ${totalViewBoxHeight || (Math.sqrt(3) * hexSize + 2*mapPadding)}`}\n          width={totalViewBoxWidth || (2 * hexSize + 2*mapPadding)}\n          height={totalViewBoxHeight || (Math.sqrt(3) * hexSize + 2*mapPadding)}\n          style={{\n              minWidth: totalViewBoxWidth || (2 * hexSize + 2*mapPadding),\n              minHeight: totalViewBoxHeight || (Math.sqrt(3) * hexSize + 2*mapPadding),\n              display: 'block'\n          }}\n        >\n          {Array.from({ length: cols }).map((_, q) =>\n            Array.from({ length: q % 2 !== 0 ? rowsOdd : rowsEven }).map((_, r) => {\n              if (!isHexVisible(q, r, mapSettings)) {\n                return null;\n              }\n              const colLabel = getColumnLabel(q);\n              const rowLabel = r + 1;\n              const coordinate = `${colLabel}${rowLabel}`;\n              const hexKey = `${q}_${r}`;\n              let baseHexFill = 'transparent';\n              if (!isProductionTurn && inRangeHexes.has(hexKey) && !starSystemCoordinatesSet.has(hexKey) && !dustCloudCoordinatesSet.has(hexKey)) {\n                baseHexFill = 'hsla(var(--accent), 0.1)'; \n              }\n              const currentHexPos: HexPosition = {col: q, row: r};\n              return (\n                <Hexagon\n                  key={`hex-${q}-${r}`}\n                  q={q}\n                  r={r}\n                  hexSize={hexSize}\n                  fill={baseHexFill}\n                  stroke={'hsl(var(--muted-foreground))'}\n                  strokeWidth={0.5}\n                  coordinateLabel={coordinate}\n                  isClickable={!isProductionTurn || isMovingFleet}\n                  onClick={isMovingFleet && !isProductionTurn ? () => onMapElementClick(null, 'hex', currentHexPos) : undefined}\n                  showMoveTargetIndicator={isMovingFleet && !isProductionTurn}\n                />\n              );\n            })\n          )}\n\n          {dustClouds.map((cloud) => {\n            if (!isHexVisible(cloud.position.col, cloud.position.row, mapSettings)) {\n                return null;\n            }\n            return (\n                <Hexagon\n                  key={cloud.id}\n                  q={cloud.position.col}\n                  r={cloud.position.row}\n                  hexSize={hexSize}\n                  fill=\"hsla(0, 0%, 44.3%, 0.6)\"\n                  stroke=\"hsla(var(--muted-foreground), 0.5)\"\n                  tooltip=\"Dust Cloud (Slows Movement)\"\n                  isClickable={!isProductionTurn || isMovingFleet}\n                  onClick={isMovingFleet && !isProductionTurn ? () => onMapElementClick(null, 'hex', cloud.position) : undefined}\n                  showMoveTargetIndicator={isMovingFleet && !isProductionTurn}\n                />\n            );\n          })}\n\n          {starSystems.map((system) => {\n            if (!isHexVisible(system.position.col, system.position.row, mapSettings)) {\n                return null;\n            }\n            const isSelected = system.id === selectedStarSystemId && !isProductionTurn;\n            const isDustCloudLocation = dustCloudCoordinatesSet.has(`${system.position.col}_${system.position.row}`);\n            \n            let hexFill: string;\n            if (isSelected) {\n              hexFill = 'hsla(var(--ring), 0.15)';\n            } else if (isDustCloudLocation) {\n              hexFill = inRangeHexes.has(`${system.position.col}_${system.position.row}`) && !isProductionTurn ? 'hsla(var(--accent), 0.1)' : 'transparent';\n            } else {\n              hexFill = inRangeHexes.has(`${system.position.col}_${system.position.row}`) && !isProductionTurn ? 'hsla(var(--accent), 0.1)' : 'hsla(var(--muted), 0.05)';\n            }\n\n            const hexStroke = isSelected ? 'hsl(var(--ring))' : 'hsl(var(--muted-foreground))';\n            const starIconFillColor = getStarSvgFillColor(system.starColor);\n\n            return (\n              <Hexagon\n                key={system.id}\n                q={system.position.col}\n                r={system.position.row}\n                hexSize={hexSize}\n                fill={hexFill}\n                stroke={hexStroke}\n                strokeWidth={isSelected ? 1.5 : 0.5}\n                onClick={() => {\n                  if (isMovingFleet && !isProductionTurn) {\n                    onMapElementClick(system.id, 'star-system', system.position);\n                  } else if (!isProductionTurn) {\n                    onStarSystemClick(system.id);\n                  }\n                }}\n                isClickable={!isProductionTurn || isMovingFleet}\n                showMoveTargetIndicator={isMovingFleet && !isProductionTurn && !selectedFleetId}\n              >\n                <g style={{ pointerEvents: 'none' }}>\n                  <circle cx=\"0\" cy=\"0\" r={hexSize * 0.30} fill={starIconFillColor} />\n                  <text\n                    x=\"0\"\n                    y={hexSize * 0.55}\n                    fontSize={hexSize * 0.22}\n                    fill=\"hsl(var(--foreground))\"\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"middle\"\n                    style={{ fontWeight: 'bold', userSelect: 'none' }}\n                  >\n                    {system.name}\n                  </text>\n                </g>\n              </Hexagon>\n            );\n          })}\n\t\t  \n          {fleets.map((fleet) => {\n             if (!isHexVisible(fleet.position.col, fleet.position.row, mapSettings)) {\n                return null;\n            }\n            const systemAtFleetPos = starSystems.find(s => s.position.col === fleet.position.col && s.position.row === fleet.position.row);\n            \n            let isVisibleToCurrentPlayer = fleet.owner === currentPlayerId;\n            if (!isVisibleToCurrentPlayer && !showFogOfWar) { \n                isVisibleToCurrentPlayer = true; \n            }\n            \n            if (!isVisibleToCurrentPlayer && showFogOfWar && systemAtFleetPos?.isExplored && systemAtFleetPos.owner === currentPlayerId) {\n                isVisibleToCurrentPlayer = true; \n            }\n\n            if (!isVisibleToCurrentPlayer) return null;\n\n            const player = players.find(p => p.id === fleet.owner);\n            const tailwindColorClass = player?.color || 'text-gray-400';\n            let fleetSvgColor = 'gray';\n            if (tailwindColorClass.includes('sky')) fleetSvgColor = 'deepskyblue';\n            if (tailwindColorClass.includes('rose')) fleetSvgColor = 'lightcoral';\n            if (tailwindColorClass.includes('yellow')) fleetSvgColor = 'gold';\n            if (tailwindColorClass.includes('green')) fleetSvgColor = 'limegreen';\n\n            const W_FLAT = 2 * hexSize;\n            const H_FLAT = Math.sqrt(3) * hexSize;\n            const mapPaddingFleet = hexSize * 0.5;\n            const centerX = mapPaddingFleet + (W_FLAT / 2) + fleet.position.col * (W_FLAT * 0.75);\n            let centerY = mapPaddingFleet + (H_FLAT / 2) + fleet.position.row * H_FLAT;\n            if (fleet.position.col % 2 !== 0) {\n              centerY += H_FLAT / 2;\n            }\n\n            const fleetTooltip = `Fleet (${player?.name || 'Unknown'}) - ${fleet.ships.reduce((sum, s) => sum + s.count, 0)} ships`;\n            const iconSize = hexSize * 0.6;\n            const isSelectedFleet = fleet.id === selectedFleetId;\n\n            return (\n              <g \n                key={fleet.id} \n                transform={`translate(${centerX - iconSize/2}, ${centerY - iconSize/2})`} \n                title={fleetTooltip}\n                onClick={() => !isProductionTurn && onMapElementClick(fleet.id, 'fleet', fleet.position)}\n                className={!isProductionTurn ? \"cursor-pointer\" : \"cursor-default\"}\n              >\n                 <Rocket \n                    style={{ \n                        color: fleetSvgColor, \n                        width: `${iconSize}px`, \n                        height: `${iconSize}px`,\n                    }} \n                    strokeWidth={isSelectedFleet ? 3 : 2}\n                    className={isSelectedFleet ? 'stroke-ring' : ''}\n                />\n              </g>\n            );\n          })}\n\n          {commandPosts.map((cp) => {\n            if (!isHexVisible(cp.position.col, cp.position.row, mapSettings)) {\n              return null;\n            }\n            const player = players.find(p => p.id === cp.owner);\n            const tailwindColorClass = player?.color || 'text-gray-400';\n            let commandPostSvgColor = 'gray'; \n\n            if (tailwindColorClass.includes('sky')) commandPostSvgColor = 'deepskyblue';\n            else if (tailwindColorClass.includes('rose')) commandPostSvgColor = 'lightcoral';\n            else if (tailwindColorClass.includes('yellow')) commandPostSvgColor = 'gold';\n            else if (tailwindColorClass.includes('green')) commandPostSvgColor = 'limegreen';\n\n            const W_FLAT = 2 * hexSize;\n            const H_FLAT = Math.sqrt(3) * hexSize;\n            const cpMapPadding = hexSize * 0.5;\n            const centerX = cpMapPadding + (W_FLAT / 2) + cp.position.col * (W_FLAT * 0.75);\n            let centerY = cpMapPadding + (H_FLAT / 2) + cp.position.row * H_FLAT;\n            if (cp.position.col % 2 !== 0) {\n              centerY += H_FLAT / 2;\n            }\n\n            const iconSize = hexSize * 0.5;\n            const tooltipText = `${player?.name || 'Unknown Player'}'s Command Post`;\n\n            return (\n              <g key={cp.id} transform={`translate(${centerX - iconSize / 2}, ${centerY - iconSize / 2})`} title={tooltipText}>\n                <Flag style={{ color: commandPostSvgColor, width: `${iconSize}px`, height: `${iconSize}px` }} />\n              </g>\n            );\n          })}\n\n          {entryPoints.map((ep) => {\n              if (!isHexVisible(ep.position.col, ep.position.row, mapSettings)) {\n                  return null;\n              }\n              const ep_mapPadding = hexSize * 0.5;\n              const ep_W_UNIT = 2 * hexSize;\n              const ep_H_UNIT = Math.sqrt(3) * hexSize;\n\n              let ep_cx = ep_mapPadding + (ep_W_UNIT / 2) + ep.position.col * (ep_W_UNIT * 0.75);\n              let ep_cy = ep_mapPadding + (ep_H_UNIT / 2) + ep.position.row * ep_H_UNIT;\n              if (ep.position.col % 2 !== 0) {\n                  ep_cy += ep_H_UNIT / 2;\n              }\n\n            return (\n              <text\n                key={ep.id}\n                x={ep_cx}\n                y={ep_cy}\n                fontSize={hexSize * 0.45}\n                fill=\"black\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"middle\"\n                className=\"pointer-events-none select-none font-semibold\"\n              >\n                {ep.name}\n              </text>\n            );\n          })}\n\n          {visualMapLabels.map((label) => {\n            if (!isHexVisible(label.position.col, label.position.row, mapSettings)) {\n                return null;\n            }\n            const label_mapPadding = hexSize * 0.5;\n            const label_W_UNIT = 2 * hexSize;\n            const label_H_UNIT = Math.sqrt(3) * hexSize;\n\n            let label_cx = label_mapPadding + (label_W_UNIT / 2) + label.position.col * (label_W_UNIT * 0.75);\n            let label_cy = label_mapPadding + (label_H_UNIT / 2) + label.position.row * label_H_UNIT;\n            if (label.position.col % 2 !== 0) {\n                label_cy += label_H_UNIT / 2;\n            }\n\n            return (\n              <text\n                key={label.id}\n                x={label_cx}\n                y={label_cy}\n                fontSize={hexSize * 0.40}\n                fill=\"hsl(var(--muted-foreground))\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"middle\"\n                className=\"pointer-events-none select-none font-normal\"\n              >\n                {label.text}\n              </text>\n            );\n          })}\n        </svg>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StarMap;\n\n    "],"names":[],"mappings":";;;;;;;AAIA;AAAA;AAAA;AACA;AACA;AALA;;;;;AAOA,0FAA0F;AAC1F,iEAAiE;AACjE,MAAM,gBAAgB,CAAC;IACrB,MAAM,IAAI,IAAI,GAAG;IACjB,MAAM,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI;IAChD,OAAO;QAAE;QAAG;QAAG,GAAG,CAAC,IAAI;IAAE;AAC3B;AAGO,MAAM,cAAc,CAAC,GAAgB;IAC1C,MAAM,SAAS,cAAc;IAC7B,MAAM,SAAS,cAAc;IAC7B,OAAO,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI;AAC3G;AAsBA,SAAS,eAAe,QAAgB;IACtC,IAAI,WAAW,GAAG,OAAO;IACzB,IAAI,QAAQ;IACZ,IAAI,MAAM;IACV,MAAO,OAAO,EAAG;QACf,QAAQ,OAAO,YAAY,CAAC,AAAC,MAAM,KAAM,IAAI,UAAU,CAAC,MAAM;QAC9D,MAAM,KAAK,KAAK,CAAC,MAAM,MAAM;IAC/B;IACA,OAAO;AACT;AAEO,SAAS,4BAA4B,aAAqB;IAC/D,MAAM,QAAQ,cAAc,KAAK,CAAC;IAClC,IAAI,CAAC,OAAO;QACV,QAAQ,IAAI,CAAC,CAAC,2BAA2B,EAAE,eAAe;QAC1D,OAAO;IACT;IAEA,MAAM,SAAS,KAAK,CAAC,EAAE,CAAC,WAAW;IACnC,MAAM,SAAS,KAAK,CAAC,EAAE;IAEvB,IAAI,MAAM,CAAC;IACX,IAAI,OAAO,MAAM,KAAK,GAAG;QACvB,MAAM,OAAO,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC;IAC9C,OAAO,IAAI,OAAO,MAAM,KAAK,GAAG;QAC9B,MAAM,WAAW,OAAO,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC;QACvD,MAAM,WAAW,OAAO,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC;QACvD,MAAM,CAAC,WAAW,CAAC,IAAI,KAAK;IAC9B,OAAO;QACL,QAAQ,IAAI,CAAC,CAAC,+DAA+D,EAAE,QAAQ;QACvF,OAAO;IACT;IAEA,MAAM,MAAM,SAAS,QAAQ,MAAM;IAEnC,IAAI,MAAM,QAAQ,MAAM,GAAG;QACzB,QAAQ,IAAI,CAAC,CAAC,kCAAkC,EAAE,QAAQ;QAC1D,OAAO;IACT;IAEA,OAAO;QAAE;QAAK;IAAI;AACpB;AAEO,SAAS,oBAAoB,SAAkB;IACpD,OAAQ,WAAW;QACjB,KAAK;YAAO,OAAO;QACnB,KAAK;YAAU,OAAO;QACtB,KAAK;YAAU,OAAO;QACtB,KAAK;YAAS,OAAO;QACrB,KAAK;YAAQ,OAAO;QACpB;YAAS,OAAO;IAClB;AACF;AAEA,oDAAoD;AACpD,SAAS,aAAa,CAAS,EAAE,CAAS,EAAE,WAAqC;IAC7E,IAAI,MAAM,GAAG;QACT,OAAO;IACX;IACA,IAAI,MAAM,KAAK,IAAI,KAAK,GAAG;QACvB,OAAO;IACX;IACA,IAAI,MAAM,KAAK,IAAI,KAAK,IAAI,IAAI;QAC5B,OAAO;IACX;IACA,IAAI,MAAM,KAAK,IAAI,KAAK,IAAI,IAAI;QAC5B,OAAO;IACX;IACA,IAAI,MAAM,MAAM,IAAI,KAAK,IAAI,IAAI;QAC7B,OAAO;IACX;IACA,IAAI,MAAM,MAAM,KAAK,GAAG;QACpB,OAAO;IACX;IACA,IAAI,MAAM,MAAM,IAAI,MAAM,GAAG;QACzB,OAAO;IACX;IACA,OAAO;AAEX;AAGA,MAAM,UAaD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,aAAa,EAAE,SAAS,8BAA8B,EAAE,cAAc,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,cAAc,IAAI,EAAE,0BAA0B,KAAK,EAAE;IACzM,MAAM,SAAS,IAAI;IACnB,MAAM,SAAS,KAAK,IAAI,CAAC,KAAK;IAC9B,MAAM,aAAa,UAAU;IAE7B,MAAM,UAAU,aAAc,SAAS,IAAK,IAAI,CAAC,SAAS,IAAI;IAC9D,IAAI,UAAU,aAAc,SAAS,IAAK,IAAI;IAC9C,IAAI,IAAI,MAAM,GAAG;QACf,WAAW,SAAS;IACtB;IAEA,MAAM,SAAS,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GACnC,GAAG,CAAC,CAAC,GAAG;QACP,MAAM,WAAW,KAAK;QACtB,MAAM,WAAW,KAAK,EAAE,GAAG,MAAM;QACjC,OAAO,GAAG,UAAU,UAAU,KAAK,GAAG,CAAC,UAAU,CAAC,EAAE,UAAU,UAAU,KAAK,GAAG,CAAC,WAAW;IAC9F,GACC,IAAI,CAAC;IAER,MAAM,wBACJ,8OAAC;QACC,QAAQ;QACR,MAAM;QACN,QAAQ;QACR,aAAa;QACb,SAAS,cAAc,UAAU;QACjC,WAAW,eAAe,UAAU,oDAAoD;QACxF,OAAO;YAAE,eAAe;QAAM;;;;;;IAIlC,MAAM,cAAc,gCAClB,8OAAC;QACC,GAAG;QACH,GAAG,UAAU,SAAS;QACtB,UAAU,UAAU;QACpB,MAAK;QACL,YAAW;QACX,kBAAiB;QACjB,OAAO;YAAE,eAAe;YAAQ,YAAY;QAAO;kBAElD;;;;;eAED;IAEJ,MAAM,kBAAkB,yBACtB,8OAAC;QAAE,WAAW,CAAC,UAAU,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;QAAE,OAAO;YAAE,eAAe;QAAO;kBAC/E;;;;;eAED;IAEJ,MAAM,6BAA6B,wCAChC,8OAAC,oOAAA,CAAA,oBAAiB;QAAC,GAAG,UAAU,UAAU;QAAM,GAAG,UAAU,UAAU;QAAM,OAAO,UAAQ;QAAK,QAAQ,UAAQ;QAAK,OAAM;;;;;eAC3H;IAEJ,MAAM,yBACJ,8OAAC;;YACE;YACA;YACA;YACA;;;;;;;IAIL,IAAI,WAAW,OAAO,YAAY,YAAY,CAAC,SAAS;QACtD,qBAAO,8OAAC;YAAE,OAAO;sBAAU;;;;;;IAC7B;IAEA,OAAO;AACT;AAGA,MAAM,UAAkC,CAAC,EACvC,WAAW,EACX,MAAM,EACN,YAAY,EACZ,UAAU,EACV,WAAW,EACX,eAAe,EACf,WAAW,EACX,YAAY,EACZ,eAAe,EACf,OAAO,EACP,oBAAoB,EACpB,iBAAiB,EACjB,iBAAiB,EACjB,mBAAmB,KAAK,EACxB,eAAe,EACf,aAAa,EACd;IACC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG;IAE7C,MAAM,0BAA0B,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACtC,MAAM,MAAM,IAAI;QAChB,WAAW,OAAO,CAAC,CAAA;YACjB,IAAI,aAAa,MAAM,QAAQ,CAAC,GAAG,EAAE,MAAM,QAAQ,CAAC,GAAG,EAAE,cAAc;gBACrE,IAAI,GAAG,CAAC,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,QAAQ,CAAC,GAAG,EAAE;YACvD;QACF;QACA,OAAO;IACT,GAAG;QAAC;QAAY;KAAY;IAE5B,MAAM,2BAA2B,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACvC,MAAM,MAAM,IAAI;QAChB,YAAY,OAAO,CAAC,CAAA;YAClB,IAAI,aAAa,OAAO,QAAQ,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,cAAc;gBACvE,IAAI,GAAG,CAAC,GAAG,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE;YACzD;QACF;QACA,OAAO;IACT,GAAG;QAAC;QAAa;KAAY;IAE7B,MAAM,4BAA4B,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACxC,OAAO,aAAa,MAAM,CAAC,CAAA,KAAM,GAAG,KAAK,KAAK;IAChD,GAAG;QAAC;QAAc;KAAgB;IAElC,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,MAAM,WAAW,IAAI;QACrB,IAAI,0BAA0B,MAAM,KAAK,GAAG,OAAO;QAEnD,IAAK,IAAI,SAAS,GAAG,SAAS,MAAM,SAAU;YAC5C,MAAM,UAAU,SAAS,MAAM,IAAI,UAAU;YAC7C,IAAK,IAAI,SAAS,GAAG,SAAS,SAAS,SAAU;gBAC/C,IAAI,aAAa,QAAQ,QAAQ,cAAc;oBAC7C,MAAM,gBAA6B;wBAAE,KAAK;wBAAQ,KAAK;oBAAO;oBAC9D,KAAK,MAAM,MAAM,0BAA2B;wBAC1C,IAAI,YAAY,eAAe,GAAG,QAAQ,KAAK,GAAG;4BAChD,SAAS,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE,QAAQ;4BAClC;wBACF;oBACF;gBACF;YACF;QACF;QACA,OAAO;IACT,GAAG;QAAC;QAAM;QAAS;QAAU;QAAa;KAA0B;IAGpE,MAAM,mBAAmB,IAAI,UAAU;IACvC,MAAM,oBAAoB,KAAK,IAAI,CAAC,KAAK;IACzC,MAAM,aAAa,UAAU;IAE7B,IAAI,mBAAmB;IACvB,IAAI,OAAO,GAAG;QACZ,mBAAmB,AAAE,CAAC,OAAM,CAAC,IAAI,mBAAsB,IAAI;IAC7D;IAEA,IAAI,oBAAoB;IACxB,IAAI,OAAO,GAAG;QACZ,IAAI,cAAc;QAClB,IAAI,aAAa;QACjB,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;YAC1B,IAAI,IAAI,MAAM,GAAG,cAAc;iBAC1B,aAAa;QACtB;QACA,IAAI,cAAc,aAAa;YAC3B,oBAAoB,KAAK,GAAG,CAAC,WAAW,mBAAmB,AAAC,UAAU,oBAAsB,oBAAoB;QACpH,OAAO,IAAI,aAAa;YACpB,oBAAoB,WAAW;QACnC,OAAO,IAAI,YAAY;YACnB,oBAAoB,AAAC,UAAU,oBAAsB,oBAAoB;QAC7E;QACA,IAAI,oBAAoB,GAAG,qBAAqB,oBAAoB;IACtE;IAGA,IAAI,SAAS,KAAM,aAAa,KAAK,YAAY,GAAI;QACjD,mBAAmB;QACnB,oBAAoB;IACxB;IAEA,MAAM,oBAAoB,mBAAmB,IAAI;IACjD,MAAM,qBAAqB,oBAAoB,IAAI;IAEnD,qBACE,8OAAC,gIAAA,CAAA,OAAI;QACH,WAAW,CAAC,sCAAsC,EAAE,oBAAoB,CAAC,gBAAgB,kCAAkC,IAAI;kBAE/H,cAAA,8OAAC,gIAAA,CAAA,cAAW;YAAC,WAAU;sBACrB,cAAA,8OAAC;gBACC,SAAS,CAAC,IAAI,EAAE,qBAAsB,IAAI,UAAU,IAAE,WAAY,CAAC,EAAE,sBAAuB,KAAK,IAAI,CAAC,KAAK,UAAU,IAAE,YAAa;gBACpI,OAAO,qBAAsB,IAAI,UAAU,IAAE;gBAC7C,QAAQ,sBAAuB,KAAK,IAAI,CAAC,KAAK,UAAU,IAAE;gBAC1D,OAAO;oBACH,UAAU,qBAAsB,IAAI,UAAU,IAAE;oBAChD,WAAW,sBAAuB,KAAK,IAAI,CAAC,KAAK,UAAU,IAAE;oBAC7D,SAAS;gBACb;;oBAEC,MAAM,IAAI,CAAC;wBAAE,QAAQ;oBAAK,GAAG,GAAG,CAAC,CAAC,GAAG,IACpC,MAAM,IAAI,CAAC;4BAAE,QAAQ,IAAI,MAAM,IAAI,UAAU;wBAAS,GAAG,GAAG,CAAC,CAAC,GAAG;4BAC/D,IAAI,CAAC,aAAa,GAAG,GAAG,cAAc;gCACpC,OAAO;4BACT;4BACA,MAAM,WAAW,eAAe;4BAChC,MAAM,WAAW,IAAI;4BACrB,MAAM,aAAa,GAAG,WAAW,UAAU;4BAC3C,MAAM,SAAS,GAAG,EAAE,CAAC,EAAE,GAAG;4BAC1B,IAAI,cAAc;4BAClB,IAAI,CAAC,oBAAoB,aAAa,GAAG,CAAC,WAAW,CAAC,yBAAyB,GAAG,CAAC,WAAW,CAAC,wBAAwB,GAAG,CAAC,SAAS;gCAClI,cAAc;4BAChB;4BACA,MAAM,gBAA6B;gCAAC,KAAK;gCAAG,KAAK;4BAAC;4BAClD,qBACE,8OAAC;gCAEC,GAAG;gCACH,GAAG;gCACH,SAAS;gCACT,MAAM;gCACN,QAAQ;gCACR,aAAa;gCACb,iBAAiB;gCACjB,aAAa,CAAC,oBAAoB;gCAClC,SAAS,iBAAiB,CAAC,mBAAmB,IAAM,kBAAkB,MAAM,OAAO,iBAAiB;gCACpG,yBAAyB,iBAAiB,CAAC;+BAVtC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG;;;;;wBAa1B;oBAGD,WAAW,GAAG,CAAC,CAAC;wBACf,IAAI,CAAC,aAAa,MAAM,QAAQ,CAAC,GAAG,EAAE,MAAM,QAAQ,CAAC,GAAG,EAAE,cAAc;4BACpE,OAAO;wBACX;wBACA,qBACI,8OAAC;4BAEC,GAAG,MAAM,QAAQ,CAAC,GAAG;4BACrB,GAAG,MAAM,QAAQ,CAAC,GAAG;4BACrB,SAAS;4BACT,MAAK;4BACL,QAAO;4BACP,SAAQ;4BACR,aAAa,CAAC,oBAAoB;4BAClC,SAAS,iBAAiB,CAAC,mBAAmB,IAAM,kBAAkB,MAAM,OAAO,MAAM,QAAQ,IAAI;4BACrG,yBAAyB,iBAAiB,CAAC;2BATtC,MAAM,EAAE;;;;;oBAYrB;oBAEC,YAAY,GAAG,CAAC,CAAC;wBAChB,IAAI,CAAC,aAAa,OAAO,QAAQ,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,cAAc;4BACtE,OAAO;wBACX;wBACA,MAAM,aAAa,OAAO,EAAE,KAAK,wBAAwB,CAAC;wBAC1D,MAAM,sBAAsB,wBAAwB,GAAG,CAAC,GAAG,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE;wBAEvG,IAAI;wBACJ,IAAI,YAAY;4BACd,UAAU;wBACZ,OAAO,IAAI,qBAAqB;4BAC9B,UAAU,aAAa,GAAG,CAAC,GAAG,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,mBAAmB,6BAA6B;wBAClI,OAAO;4BACL,UAAU,aAAa,GAAG,CAAC,GAAG,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,mBAAmB,6BAA6B;wBAClI;wBAEA,MAAM,YAAY,aAAa,qBAAqB;wBACpD,MAAM,oBAAoB,oBAAoB,OAAO,SAAS;wBAE9D,qBACE,8OAAC;4BAEC,GAAG,OAAO,QAAQ,CAAC,GAAG;4BACtB,GAAG,OAAO,QAAQ,CAAC,GAAG;4BACtB,SAAS;4BACT,MAAM;4BACN,QAAQ;4BACR,aAAa,aAAa,MAAM;4BAChC,SAAS;gCACP,IAAI,iBAAiB,CAAC,kBAAkB;oCACtC,kBAAkB,OAAO,EAAE,EAAE,eAAe,OAAO,QAAQ;gCAC7D,OAAO,IAAI,CAAC,kBAAkB;oCAC5B,kBAAkB,OAAO,EAAE;gCAC7B;4BACF;4BACA,aAAa,CAAC,oBAAoB;4BAClC,yBAAyB,iBAAiB,CAAC,oBAAoB,CAAC;sCAEhE,cAAA,8OAAC;gCAAE,OAAO;oCAAE,eAAe;gCAAO;;kDAChC,8OAAC;wCAAO,IAAG;wCAAI,IAAG;wCAAI,GAAG,UAAU;wCAAM,MAAM;;;;;;kDAC/C,8OAAC;wCACC,GAAE;wCACF,GAAG,UAAU;wCACb,UAAU,UAAU;wCACpB,MAAK;wCACL,YAAW;wCACX,kBAAiB;wCACjB,OAAO;4CAAE,YAAY;4CAAQ,YAAY;wCAAO;kDAE/C,OAAO,IAAI;;;;;;;;;;;;2BA5BX,OAAO,EAAE;;;;;oBAiCpB;oBAEC,OAAO,GAAG,CAAC,CAAC;wBACV,IAAI,CAAC,aAAa,MAAM,QAAQ,CAAC,GAAG,EAAE,MAAM,QAAQ,CAAC,GAAG,EAAE,cAAc;4BACrE,OAAO;wBACX;wBACA,MAAM,mBAAmB,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,MAAM,QAAQ,CAAC,GAAG,IAAI,EAAE,QAAQ,CAAC,GAAG,KAAK,MAAM,QAAQ,CAAC,GAAG;wBAE7H,IAAI,2BAA2B,MAAM,KAAK,KAAK;wBAC/C,IAAI,CAAC,4BAA4B,CAAC,cAAc;4BAC5C,2BAA2B;wBAC/B;wBAEA,IAAI,CAAC,4BAA4B,gBAAgB,kBAAkB,cAAc,iBAAiB,KAAK,KAAK,iBAAiB;4BACzH,2BAA2B;wBAC/B;wBAEA,IAAI,CAAC,0BAA0B,OAAO;wBAEtC,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,MAAM,KAAK;wBACrD,MAAM,qBAAqB,QAAQ,SAAS;wBAC5C,IAAI,gBAAgB;wBACpB,IAAI,mBAAmB,QAAQ,CAAC,QAAQ,gBAAgB;wBACxD,IAAI,mBAAmB,QAAQ,CAAC,SAAS,gBAAgB;wBACzD,IAAI,mBAAmB,QAAQ,CAAC,WAAW,gBAAgB;wBAC3D,IAAI,mBAAmB,QAAQ,CAAC,UAAU,gBAAgB;wBAE1D,MAAM,SAAS,IAAI;wBACnB,MAAM,SAAS,KAAK,IAAI,CAAC,KAAK;wBAC9B,MAAM,kBAAkB,UAAU;wBAClC,MAAM,UAAU,kBAAmB,SAAS,IAAK,MAAM,QAAQ,CAAC,GAAG,GAAG,CAAC,SAAS,IAAI;wBACpF,IAAI,UAAU,kBAAmB,SAAS,IAAK,MAAM,QAAQ,CAAC,GAAG,GAAG;wBACpE,IAAI,MAAM,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG;4BAChC,WAAW,SAAS;wBACtB;wBAEA,MAAM,eAAe,CAAC,OAAO,EAAE,QAAQ,QAAQ,UAAU,IAAI,EAAE,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;wBACvH,MAAM,WAAW,UAAU;wBAC3B,MAAM,kBAAkB,MAAM,EAAE,KAAK;wBAErC,qBACE,8OAAC;4BAEC,WAAW,CAAC,UAAU,EAAE,UAAU,WAAS,EAAE,EAAE,EAAE,UAAU,WAAS,EAAE,CAAC,CAAC;4BACxE,OAAO;4BACP,SAAS,IAAM,CAAC,oBAAoB,kBAAkB,MAAM,EAAE,EAAE,SAAS,MAAM,QAAQ;4BACvF,WAAW,CAAC,mBAAmB,mBAAmB;sCAEjD,cAAA,8OAAC,sMAAA,CAAA,SAAM;gCACJ,OAAO;oCACH,OAAO;oCACP,OAAO,GAAG,SAAS,EAAE,CAAC;oCACtB,QAAQ,GAAG,SAAS,EAAE,CAAC;gCAC3B;gCACA,aAAa,kBAAkB,IAAI;gCACnC,WAAW,kBAAkB,gBAAgB;;;;;;2BAb5C,MAAM,EAAE;;;;;oBAiBnB;oBAEC,aAAa,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,cAAc;4BAChE,OAAO;wBACT;wBACA,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,GAAG,KAAK;wBAClD,MAAM,qBAAqB,QAAQ,SAAS;wBAC5C,IAAI,sBAAsB;wBAE1B,IAAI,mBAAmB,QAAQ,CAAC,QAAQ,sBAAsB;6BACzD,IAAI,mBAAmB,QAAQ,CAAC,SAAS,sBAAsB;6BAC/D,IAAI,mBAAmB,QAAQ,CAAC,WAAW,sBAAsB;6BACjE,IAAI,mBAAmB,QAAQ,CAAC,UAAU,sBAAsB;wBAErE,MAAM,SAAS,IAAI;wBACnB,MAAM,SAAS,KAAK,IAAI,CAAC,KAAK;wBAC9B,MAAM,eAAe,UAAU;wBAC/B,MAAM,UAAU,eAAgB,SAAS,IAAK,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,SAAS,IAAI;wBAC9E,IAAI,UAAU,eAAgB,SAAS,IAAK,GAAG,QAAQ,CAAC,GAAG,GAAG;wBAC9D,IAAI,GAAG,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG;4BAC7B,WAAW,SAAS;wBACtB;wBAEA,MAAM,WAAW,UAAU;wBAC3B,MAAM,cAAc,GAAG,QAAQ,QAAQ,iBAAiB,eAAe,CAAC;wBAExE,qBACE,8OAAC;4BAAc,WAAW,CAAC,UAAU,EAAE,UAAU,WAAW,EAAE,EAAE,EAAE,UAAU,WAAW,EAAE,CAAC,CAAC;4BAAE,OAAO;sCAClG,cAAA,8OAAC,kMAAA,CAAA,OAAI;gCAAC,OAAO;oCAAE,OAAO;oCAAqB,OAAO,GAAG,SAAS,EAAE,CAAC;oCAAE,QAAQ,GAAG,SAAS,EAAE,CAAC;gCAAC;;;;;;2BADrF,GAAG,EAAE;;;;;oBAIjB;oBAEC,YAAY,GAAG,CAAC,CAAC;wBACd,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,cAAc;4BAC9D,OAAO;wBACX;wBACA,MAAM,gBAAgB,UAAU;wBAChC,MAAM,YAAY,IAAI;wBACtB,MAAM,YAAY,KAAK,IAAI,CAAC,KAAK;wBAEjC,IAAI,QAAQ,gBAAiB,YAAY,IAAK,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,YAAY,IAAI;wBACjF,IAAI,QAAQ,gBAAiB,YAAY,IAAK,GAAG,QAAQ,CAAC,GAAG,GAAG;wBAChE,IAAI,GAAG,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG;4BAC3B,SAAS,YAAY;wBACzB;wBAEF,qBACE,8OAAC;4BAEC,GAAG;4BACH,GAAG;4BACH,UAAU,UAAU;4BACpB,MAAK;4BACL,YAAW;4BACX,kBAAiB;4BACjB,WAAU;sCAET,GAAG,IAAI;2BATH,GAAG,EAAE;;;;;oBAYhB;oBAEC,gBAAgB,GAAG,CAAC,CAAC;wBACpB,IAAI,CAAC,aAAa,MAAM,QAAQ,CAAC,GAAG,EAAE,MAAM,QAAQ,CAAC,GAAG,EAAE,cAAc;4BACpE,OAAO;wBACX;wBACA,MAAM,mBAAmB,UAAU;wBACnC,MAAM,eAAe,IAAI;wBACzB,MAAM,eAAe,KAAK,IAAI,CAAC,KAAK;wBAEpC,IAAI,WAAW,mBAAoB,eAAe,IAAK,MAAM,QAAQ,CAAC,GAAG,GAAG,CAAC,eAAe,IAAI;wBAChG,IAAI,WAAW,mBAAoB,eAAe,IAAK,MAAM,QAAQ,CAAC,GAAG,GAAG;wBAC5E,IAAI,MAAM,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG;4BAC9B,YAAY,eAAe;wBAC/B;wBAEA,qBACE,8OAAC;4BAEC,GAAG;4BACH,GAAG;4BACH,UAAU,UAAU;4BACpB,MAAK;4BACL,YAAW;4BACX,kBAAiB;4BACjB,WAAU;sCAET,MAAM,IAAI;2BATN,MAAM,EAAE;;;;;oBAYnB;;;;;;;;;;;;;;;;;AAKV;uCAEe","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/ai/flows/tutorial-assistant.ts"],"sourcesContent":["// This file is machine-generated - changes may be lost.\n\n'use server';\n\n/**\n * @fileOverview Provides an AI assistant to guide new players in understanding the game mechanics and provide strategic advice.\n *\n * - getGameExplanation - A function that explains game mechanics to new players.\n * - GetGameExplanationInput - The input type for the getGameExplanation function.\n * - GetGameExplanationOutput - The return type for the getGameExplanation function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GetGameExplanationInputSchema = z.object({\n  topic: z.string().describe('The specific game mechanic or strategy the player wants to understand.'),\n  playerContext: z.string().optional().describe('Optional: Additional context about the player situation.'),\n});\nexport type GetGameExplanationInput = z.infer<typeof GetGameExplanationInputSchema>;\n\nconst GetGameExplanationOutputSchema = z.object({\n  explanation: z.string().describe('A detailed explanation of the requested game mechanic or strategy.'),\n  strategicTips: z.string().optional().describe('Optional: Strategic tips related to the explanation.'),\n});\nexport type GetGameExplanationOutput = z.infer<typeof GetGameExplanationOutputSchema>;\n\nexport async function getGameExplanation(input: GetGameExplanationInput): Promise<GetGameExplanationOutput> {\n  return getGameExplanationFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'gameExplanationPrompt',\n  input: {schema: GetGameExplanationInputSchema},\n  output: {schema: GetGameExplanationOutputSchema},\n  prompt: `You are a helpful AI assistant designed to explain complex game mechanics and provide strategic tips for the Stellar Conquest game.\n\n  The player is asking about: {{{topic}}}\n  Player Context: {{{playerContext}}}\n\n  Provide a clear and concise explanation of the topic. If applicable, also provide strategic tips to help the player make informed decisions.\n  Make sure the explanation can be understood by a new player.\n  `,\n});\n\nconst getGameExplanationFlow = ai.defineFlow(\n  {\n    name: 'getGameExplanationFlow',\n    inputSchema: GetGameExplanationInputSchema,\n    outputSchema: GetGameExplanationOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;;;IA2BlC","debugId":null}},
    {"offset": {"line": 1132, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/TutorialAssistantDialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { getGameExplanation, type GetGameExplanationInput, type GetGameExplanationOutput } from '@/ai/flows/tutorial-assistant';\nimport { Loader2, Sparkles } from 'lucide-react';\nimport { ScrollArea } from '@/components/ui/scroll-area';\n\nconst FormSchema = z.object({\n  topic: z.string().min(3, { message: 'Topic must be at least 3 characters long.' }),\n  playerContext: z.string().optional(),\n});\n\ntype TutorialFormValues = z.infer<typeof FormSchema>;\n\ninterface TutorialAssistantDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nconst TutorialAssistantDialog: React.FC<TutorialAssistantDialogProps> = ({ open, onOpenChange }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiResponse, setAiResponse] = useState<GetGameExplanationOutput | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const form = useForm<TutorialFormValues>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      topic: '',\n      playerContext: '',\n    },\n  });\n\n  const onSubmit: SubmitHandler<TutorialFormValues> = async (data) => {\n    setIsLoading(true);\n    setAiResponse(null);\n    setError(null);\n    try {\n      const response = await getGameExplanation(data as GetGameExplanationInput);\n      setAiResponse(response);\n    } catch (err) {\n      console.error('Error getting explanation:', err);\n      setError('Failed to get explanation. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px] bg-card text-card-foreground border-border shadow-xl\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2 text-2xl\">\n            <Sparkles className=\"text-accent\" /> Tutorial Assistant\n          </DialogTitle>\n          <DialogDescription>\n            Ask about game mechanics, strategies, or anything else you need help with.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 p-1\">\n            <FormField\n              control={form.control}\n              name=\"topic\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>What do you want to know about?</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., 'How does combat work?', 'Best starting strategy'\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"playerContext\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Optional: Add any context about your current situation</FormLabel>\n                  <FormControl>\n                    <Textarea placeholder=\"e.g., 'I have 3 colonies and I'm being attacked by Player 2.'\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" disabled={isLoading} className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\">\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Getting Advice...\n                </>\n              ) : (\n                'Ask AI Assistant'\n              )}\n            </Button>\n          </form>\n        </Form>\n\n        {error && <p className=\"text-destructive text-sm mt-4\">{error}</p>}\n\n        {aiResponse && (\n          <ScrollArea className=\"mt-6 max-h-[300px] p-4 border border-border rounded-md bg-background/50\">\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-semibold text-lg text-accent\">Explanation:</h3>\n                <p className=\"text-sm whitespace-pre-wrap\">{aiResponse.explanation}</p>\n              </div>\n              {aiResponse.strategicTips && (\n                <div>\n                  <h3 className=\"font-semibold text-lg text-accent\">Strategic Tips:</h3>\n                  <p className=\"text-sm whitespace-pre-wrap\">{aiResponse.strategicTips}</p>\n                </div>\n              )}\n            </div>\n          </ScrollArea>\n        )}\n        <DialogFooter className=\"mt-4\">\n            <DialogClose asChild>\n                <Button variant=\"outline\">Close</Button>\n            </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TutorialAssistantDialog;\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1468, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1513, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/data/game-init-data.ts"],"sourcesContent":["\nimport type { GameState, Player, StarSystem as StarSystemType, PlayerResources, GameDataItem, Planet as PlanetType, ResearchData, VisualMapLabel, CommandPost } from '@/types/game';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\n// --- RAW GAME DATA (Ships, Research, Planetary Items) ---\nexport const rawGameDataItems: GameDataItem[] = [\n  { \"PurchaseType\": \"Ship\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Colony Transport\", \"IPCost\": 1, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Scout\", \"IPCost\": 3, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship\", \"Level\": \"\", \"Quantity\": 2, \"Name\": \"Scout\", \"IPCost\": 5, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Corvette\", \"IPCost\": 8, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Fighter\", \"IPCost\": 20, \"ResearchPrerequisite\": \"Fighter Ship\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Death Star\", \"IPCost\": 40, \"ResearchPrerequisite\": \"Death Star\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Planetary\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Factory\", \"IPCost\": 4, \"ResearchPrerequisite\": \"Industrial Tech\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Planetary\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Robotic Factory\", \"IPCost\": 3, \"ResearchPrerequisite\": \"Robotic Industrialization\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Planetary\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Missle Base\", \"IPCost\": 4, \"ResearchPrerequisite\": \"Missle Base\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Planetary\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Advanced Missle Base\", \"IPCost\": 10, \"ResearchPrerequisite\": \"Advanced Missle Base\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Planetary\", \"Level\": \"\", \"Quantity\": 1, \"Name\": \"Planetary Shield\", \"IPCost\": 30, \"ResearchPrerequisite\": \"Planet Shield\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"Only 1 planetary shield can be purchased for each colony\" },\n  { \"PurchaseType\": \"Ship Speed Research\", \"Level\": 1, \"Quantity\": \"\", \"Name\": \"3 Hex Speed\", \"IPCost\": 15, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": 1, \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship Speed Research\", \"Level\": 1, \"Quantity\": \"\", \"Name\": \"4 Hex Speed\", \"IPCost\": 40, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"3 Hex Speed\", \"DiscountPrice\": 30, \"ShipSpeedBonus\": 2, \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship Speed Research\", \"Level\": 2, \"Quantity\": \"\", \"Name\": \"5 Hex Speed\", \"IPCost\": 55, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"4 Hex Speed\", \"DiscountPrice\": 40, \"ShipSpeedBonus\": 3, \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship Speed Research\", \"Level\": 2, \"Quantity\": \"\", \"Name\": \"6 Hex Speed\", \"IPCost\": 65, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"5 Hex Speed\", \"DiscountPrice\": 50, \"ShipSpeedBonus\": 4, \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship Speed Research\", \"Level\": 3, \"Quantity\": \"\", \"Name\": \"7 Hex Speed\", \"IPCost\": 75, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"6 Hex Speed\", \"DiscountPrice\": 60, \"ShipSpeedBonus\": 5, \"Note\": \"\" },\n  { \"PurchaseType\": \"Ship Speed Research\", \"Level\": 3, \"Quantity\": \"\", \"Name\": \"8 Hex Speed\", \"IPCost\": 80, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"7 Hex Speed\", \"DiscountPrice\": 70, \"ShipSpeedBonus\": 6, \"Note\": \"\" },\n  { \"PurchaseType\": \"Weapon Research\", \"Level\": 1, \"Quantity\": \"\", \"Name\": \"Missle Base\", \"IPCost\": 25, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Weapon Research\", \"Level\": 1, \"Quantity\": \"\", \"Name\": \"Fighter Ship\", \"IPCost\": 35, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Weapon Research\", \"Level\": 2, \"Quantity\": \"\", \"Name\": \"Advanced Missle Base\", \"IPCost\": 55, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"Missle Base\", \"DiscountPrice\": 40, \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Weapon Research\", \"Level\": 2, \"Quantity\": \"\", \"Name\": \"Death Star\", \"IPCost\": 90, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"Fighter Ship\", \"DiscountPrice\": 75, \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Weapon Research\", \"Level\": 3, \"Quantity\": \"\", \"Name\": \"Improved Ship Weaponry\", \"IPCost\": 100, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Weapon Research\", \"Level\": 3, \"Quantity\": \"\", \"Name\": \"Planet Shield\", \"IPCost\": 130, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Technology Research\", \"Level\": 1, \"Quantity\": \"\", \"Name\": \"Controller Climate Tech\", \"IPCost\": 25, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Technology Research\", \"Level\": 1, \"Quantity\": \"\", \"Name\": \"Industrial Tech\", \"IPCost\": 25, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Technology Research\", \"Level\": 2, \"Quantity\": \"\", \"Name\": \"Improved Industrial Tech\", \"IPCost\": 55, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"Industrial Tech\", \"DiscountPrice\": 40, \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Technology Research\", \"Level\": 2, \"Quantity\": \"\", \"Name\": \"Unlimited Ship Range\", \"IPCost\": 60, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"5 Hex Speed\", \"DiscountPrice\": 40, \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Technology Research\", \"Level\": 3, \"Quantity\": \"\", \"Name\": \"Unlimited Ship Communication\", \"IPCost\": 70, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"\", \"DiscountPrice\": \"\", \"ShipSpeedBonus\": \"\", \"Note\": \"\" },\n  { \"PurchaseType\": \"Technology Research\", \"Level\": 3, \"Quantity\": \"\", \"Name\": \"Robotic Industrialization\", \"IPCost\": 100, \"ResearchPrerequisite\": \"\", \"DiscountPrerequisit\": \"Industrial Tech\", \"DiscountPrice\": 85, \"ShipSpeedBonus\": \"\", \"Note\": \"\" }\n];\n\n\n// --- DUST CLOUD DATA ---\nconst rawDustCloudLocations = [\n  { \"Location\": { q: 1, r: 10 } },\n  { \"Location\": { q: 8, r: 7 } },\n  { \"Location\": { q: 9, r: 13 } },\n  { \"Location\": { q: 16, r: 1 } },\n  { \"Location\": { q: 16, r: 19 } },\n  { \"Location\": { q: 23, r: 7 } },\n  { \"Location\": { q: 24, r: 13 } },\n  { \"Location\": { q: 0, r: 9 } },\n  { \"Location\": { q: 0, r: 10 } },\n  { \"Location\": { q: 0, r: 11 } },\n  { \"Location\": { q: 0, r: 12 } },\n  { \"Location\": { q: 29, r: 6 } },\n  { \"Location\": { q: 30, r: 10 } },\n  { \"Location\": { q: 30, r: 7 } },\n  { \"Location\": { q: 30, r: 8 } },\n  { \"Location\": { q: 31, r: 9 } },\n  { \"Location\": { q: 31, r: 10 } },\n  { \"Location\": { q: 31, r: 7 } },\n  { \"Location\": { q: 31, r: 8 } },\n  { \"Location\": { q: 1, r: 9 } },\n  { \"Location\": { q: 1, r: 11 } },\n  { \"Location\": { q: 2, r: 10 } },\n  { \"Location\": { q: 8, r: 12 } },\n  { \"Location\": { q: 8, r: 13 } },\n  { \"Location\": { q: 8, r: 6 } },\n  { \"Location\": { q: 9, r: 11 } },\n  { \"Location\": { q: 9, r: 12 } },\n  { \"Location\": { q: 9, r: 5 } },\n  { \"Location\": { q: 9, r: 6 } },\n  { \"Location\": { q: 9, r: 7 } },\n  { \"Location\": { q: 10, r: 13 } },\n  { \"Location\": { q: 10, r: 14 } },\n  { \"Location\": { q: 10, r: 15 } },\n  { \"Location\": { q: 10, r: 5 } },\n  { \"Location\": { q: 10, r: 6 } },\n  { \"Location\": { q: 11, r: 14 } },\n  { \"Location\": { q: 11, r: 4 } },\n  { \"Location\": { q: 12, r: 15 } },\n  { \"Location\": { q: 12, r: 4 } },\n  { \"Location\": { q: 12, r: 5 } },\n  { \"Location\": { q: 14, r: 0 } },\n  { \"Location\": { q: 14, r: 19 } },\n  { \"Location\": { q: 15, r: 0 } },\n  { \"Location\": { q: 15, r: 18 } },\n  { \"Location\": { q: 15, r: 19 } },\n  { \"Location\": { q: 16, r: 0 } },\n  { \"Location\": { q: 17, r: 0 } },\n  { \"Location\": { q: 17, r: 18 } },\n  { \"Location\": { q: 20, r: 5 } }, \n  { \"Location\": { q: 21, r: 13 } },\n  { \"Location\": { q: 21, r: 14 } },\n  { \"Location\": { q: 21, r: 4 } },\n  { \"Location\": { q: 21, r: 5 } },\n  { \"Location\": { q: 22, r: 14 } },\n  { \"Location\": { q: 22, r: 5 } },\n  { \"Location\": { q: 22, r: 6 } },\n  { \"Location\": { q: 23, r: 12 } },\n  { \"Location\": { q: 23, r: 13 } },\n  { \"Location\": { q: 23, r: 5 } },\n  { \"Location\": { q: 23, r: 6 } },\n  { \"Location\": { q: 24, r: 11 } },\n  { \"Location\": { q: 24, r: 12 } }\n];\n\nexport const parsedDustClouds: GameState['dustClouds'] = rawDustCloudLocations.map((dc, index) => {\n  return {\n    id: `dc_${index}`,\n    position: { col: dc.Location.q, row: dc.Location.r },\n  };\n}) as GameState['dustClouds'];\n\n\n// --- STAR SYSTEM DATA ---\nconst rawStarSystemData: Omit<StarSystemType, 'planets' | 'owner' | 'isExplored' | 'id' | 'position'> & { Location: string, SystemName: string, Color: string, StarCardNo?: string}[] = [\n  { \"SystemName\": \"Hamal\", \"Location\": { q: 26, r: 14 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Scorpii\", \"Location\": { q: 26, r: 18 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Wezen\", \"Location\": { q: 26, r: 8 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Bootis\", \"Location\": { q: 27, r: 4 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Dubhe\", \"Location\": { q: 28, r: 11 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Barnard\", \"Location\": { q: 28, r: 16 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Polaris\", \"Location\": { q: 30, r: 9 }, \"Color\": \"Green\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Sirius\", \"Location\": { q: 1, r: 10 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Lalande\", \"Location\": { q: 1, r: 17 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Luyten\", \"Location\": { q: 3, r: 12 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Indi\", \"Location\": { q: 3, r: 3 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Ceti\", \"Location\": { q: 4, r: 16 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Kapetyu\", \"Location\": { q: 4, r: 6 }, \"Color\": \"Red\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Diphda\", \"Location\": { q: 5, r: 8 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Canis\", \"Location\": { q: 6, r: 4 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Eridani\", \"Location\": { q: 7, r: 11 }, \"Color\": \"Green\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Mira\", \"Location\": { q: 7, r: 17 }, \"Color\": \"Red\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Ophiuchi\", \"Location\": { q: 7, r: 1 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Ross\", \"Location\": { q: 8, r: 9 }, \"Color\": \"Red\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Rastaban\", \"Location\": { q: 8, r: 15 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Deneb\", \"Location\": { q: 8, r: 7 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Pherda\", \"Location\": { q: 9, r: 13 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Alphard\", \"Location\": { q: 11, r: 9 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Lyrae\", \"Location\": { q: 11, r: 12 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Alcor\", \"Location\": { q: 11, r: 17 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Cephei\", \"Location\": { q: 11, r: 2 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Mirfak\", \"Location\": { q: 11, r: 5 }, \"Color\": \"Green\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Kochab\", \"Location\": { q: 13, r: 5 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Capella\", \"Location\": { q: 13, r: 7 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Lacaille\", \"Location\": { q: 14, r: 12 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Sadir\", \"Location\": { q: 14, r: 15 }, \"Color\": \"Green\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Schedar\", \"Location\": { q: 14, r: 3 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Canopus\", \"Location\": { q: 15, r: 9 }, \"Color\": \"Green\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Hydrae\", \"Location\": { q: 15, r: 17 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Draconis\", \"Location\": { q: 16, r: 10 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Mizar\", \"Location\": { q: 16, r: 1 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Zosca\", \"Location\": { q: 16, r: 19 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Crucis\", \"Location\": { q: 16, r: 7 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Lupi\", \"Location\": { q: 17, r: 13 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Caph\", \"Location\": { q: 17, r: 5 }, \"Color\": \"Green\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Almach\", \"Location\": { q: 18, r: 9 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Scheat\", \"Location\": { q: 19, r: 11 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Aurigae\", \"Location\": { q: 19, r: 15 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Antares\", \"Location\": { q: 19, r: 3 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Spica\", \"Location\": { q: 20, r: 7 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Procyou\", \"Location\": { q: 21, r: 18 }, \"Color\": \"Green\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Tauri\", \"Location\": { q: 21, r: 1 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Mirach\", \"Location\": { q: 22, r: 10 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Cygni\", \"Location\": { q: 22, r: 12 }, \"Color\": \"Yellow\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Kruger\", \"Location\": { q: 23, r: 17 }, \"Color\": \"Red\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Arcturus\", \"Location\": { q: 23, r: 4 }, \"Color\": \"Orange\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Vega\", \"Location\": { q: 23, r: 7 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" }, \n  { \"SystemName\": \"Wolf\", \"Location\": { q: 24, r: 2 }, \"Color\": \"Red\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Altair\", \"Location\": { q: 24, r: 13 }, \"Color\": \"Blue\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Entry 1\", \"Location\": { q: 24, r: 2 }, \"Color\": \"White\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Entry 2\", \"Location\": { q: 24, r: 13 }, \"Color\": \"White\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Entry 3\", \"Location\": { q: 24, r: 2 }, \"Color\": \"White\", \"StarCardNo\": \"\" },\n  { \"SystemName\": \"Entry 4\", \"Location\": { q: 24, r: 13 }, \"Color\": \"White\", \"StarCardNo\": \"\" }\n];\n\nexport const initialStarSystems: StarSystemType[] = rawStarSystemData.map((star, index) => {\n  return {\n    id: `star_${star.SystemName.toLowerCase().replace(/\\s/g, '_')}_${index}`,\n    name: star.SystemName,\n    position: { col: star.Location.q, row: star.Location.r },\n    starColor: star.Color,\n    isExplored: false,\n    planets: [],\n    starCardNo: star.StarCardNo || undefined,\n    owner: undefined,\n  };\n}) as StarSystemType[];\n\n\n\n// --- PLAYER CONFIGS & ENTRY POINTS ---\nexport const initialEntryPoints: GameState['entryPoints'] = [\n  { id: 'ep1', name: 'Start 1', position: { col: 34, row: 20 } }, // Player 1: AI21\n  { id: 'ep2', name: 'Start 2', position: { col: 1, row: 19 } },  // Player 2: B20\n  { id: 'ep3', name: 'Start 3', position: { col: 1, row: 0 } },   // Player 3: B1\n  { id: 'ep4', name: 'Start 4', position: { col: 34, row: 0 } },  // Player 4: AI1\n];\n\nexport const playerConfigs: Omit<Player, 'id' | 'name' | 'color' | 'entryPointId' | 'researchedTechIds' | 'researchProgress'> & { idPrefix: string, namePrefix: string, colorValue: string, initialResources: PlayerResources }[] = [\n  { idPrefix: 'player1', namePrefix: 'Player 1', colorValue: 'text-sky-400', initialResources: { productionPoints: 0, unassignedScouts: 4, unassignedCorvettes: 4, unassignedColonyTransports: 35 } },\n  { idPrefix: 'player2', namePrefix: 'Player 2', colorValue: 'text-rose-400', initialResources: { productionPoints: 0, unassignedScouts: 4, unassignedCorvettes: 4, unassignedColonyTransports: 35 } },\n  { idPrefix: 'player3', namePrefix: 'Player 3', colorValue: 'text-yellow-400', initialResources: { productionPoints: 0, unassignedScouts: 4, unassignedCorvettes: 4, unassignedColonyTransports: 35 } },\n  { idPrefix: 'player4', namePrefix: 'Player 4', colorValue: 'text-green-500', initialResources: { productionPoints: 0, unassignedScouts: 4, unassignedCorvettes: 4, unassignedColonyTransports: 35 } },\n];\n\n// --- VISUAL MAP LABELS (e.g., for off-map entry points before moving to \"Start X\") ---\nexport const initialVisualMapLabels: VisualMapLabel[] = [\n  { id: 'vml1', text: 'Entry 1', position: { col: 33, row: 19 } }, // AH20\n  { id: 'vml2', text: 'Entry 2', position: { col: 2, row: 20 } },  // C21\n  { id: 'vml3', text: 'Entry 3', position: { col: 2, row: 0 } },   // C1\n  { id: 'vml4', text: 'Entry 4', position: { col: 33, row: 0 } },  // AH1\n];\n\n\n// --- INITIAL GAME STATE ---\nexport const initialGameState: GameState = {\n  gameId: null,\n  turn: 0, \n  players: [],\n  currentPlayerId: null,\n  starSystems: initialStarSystems,\n  fleets: [],\n  commandPosts: [], \n  gameDataItems: rawGameDataItems.map((item, index) => ({\n    ...item,\n    id: `${item.Name.toLowerCase().replace(/\\s+/g, '-')}_${item.Quantity || 'qGen'}_${item.IPCost}_${index}`\n  })),\n  dustClouds: parsedDustClouds,\n  entryPoints: initialEntryPoints,\n  visualMapLabels: initialVisualMapLabels,\n  mapSettings: {\n    cols: 35, \n    rowsEven: 22, \n    rowsOdd: 22,  \n    hexSize: 20,\n  },\n  gamePhase: 'setup',\n};\n\n// --- GAME CONSTANTS ---\nexport const MIN_PLAYERS_TO_START = 2;\nexport const INITIAL_TURN_0_PRODUCTION_POINTS = 25;\nexport const REGULAR_PRODUCTION_POINTS = 5;\nexport const PRODUCTION_TURN_INTERVAL = 5; \n\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2947, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/MultiplayerPanel.tsx"],"sourcesContent":["\n'use client';\n\nimport Image from 'next/image';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Separator } from '@/components/ui/separator';\nimport { useToast } from '@/hooks/use-toast';\nimport type { GameSessionData, Player as PlayerType } from '@/types/game';\nimport { MIN_PLAYERS_TO_START } from '@/data/game-init-data';\nimport {\n  XIcon,\n  PlusSquare,\n  LogIn,\n  Copy,\n  Lock,\n  ListChecks,\n  Loader2,\n  UsersRound,\n  Play,\n} from 'lucide-react';\n\ninterface MultiplayerPanelProps {\n  activePanel: 'create' | 'join' | null;\n  setActivePanel: (panel: 'create' | 'join' | null) => void;\n  createdGameCode: string | null;\n  hostName: string;\n  setHostName: (name: string) => void;\n  isPrivateGame: boolean;\n  setIsPrivateGame: (isPrivate: boolean) => void;\n  joinGameCode: string;\n  setJoinGameCode: (code: string) => void;\n  joiningPlayerName: string;\n  setJoiningPlayerName: (name: string) => void;\n  publicGamesList: GameSessionData[];\n  isLoadingPublicGames: boolean;\n  firestoreGameStatus: string;\n  localPlayers: PlayerType[];\n  handleCreateGameSession: () => Promise<void>;\n  handleJoinGame: () => Promise<boolean | undefined>;\n  handleJoinListedGame: (game: GameSessionData) => Promise<boolean | undefined>;\n  handleStartGame: () => Promise<void>;\n  handleCancelGame: () => Promise<void>;\n}\n\nconst MultiplayerPanel: React.FC<MultiplayerPanelProps> = ({\n  activePanel,\n  setActivePanel,\n  createdGameCode,\n  hostName,\n  setHostName,\n  isPrivateGame,\n  setIsPrivateGame,\n  joinGameCode,\n  setJoinGameCode,\n  joiningPlayerName,\n  setJoiningPlayerName,\n  publicGamesList,\n  isLoadingPublicGames,\n  firestoreGameStatus,\n  localPlayers,\n  handleCreateGameSession,\n  handleJoinGame,\n  handleJoinListedGame,\n  handleStartGame,\n  handleCancelGame,\n}) => {\n  const { toast } = useToast();\n\n  if (!activePanel) return null;\n\n  return (\n    <Card className=\"w-full md:w-1/3 lg:w-1/4 xl:w-1/5 h-full flex flex-col shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"capitalize flex items-center justify-between\">\n          {activePanel === 'create' ? 'Create Game Session' : 'Join Game Session'}\n          <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => setActivePanel(null)}>\n            <XIcon className=\"w-4 h-4\" />\n          </Button>\n        </CardTitle>\n      </CardHeader>\n      <ScrollArea className=\"flex-1\">\n        <CardContent className=\"space-y-4\">\n          {activePanel === 'create' && !createdGameCode && (\n            <>\n              <p className=\"text-sm text-muted-foreground\">Configure your new game session.</p>\n              <div data-ai-hint=\"network game setup\" className=\"w-full h-32 bg-muted rounded-md flex items-center justify-center mb-4\">\n                <Image src=\"https://placehold.co/300x200.png\" alt=\"Create game placeholder\" width={150} height={100} className=\"rounded\" />\n              </div>\n              <div>\n                <Label htmlFor=\"hostName\" className=\"text-xs\">Your Name</Label>\n                <Input\n                  id=\"hostName\"\n                  placeholder=\"Enter your name\"\n                  value={hostName}\n                  onChange={(e) => setHostName(e.target.value)}\n                  className=\"mt-1\"\n                />\n              </div>\n              <div className=\"flex items-center space-x-2 mt-3\">\n                <Checkbox\n                  id=\"isPrivateGame\"\n                  checked={isPrivateGame}\n                  onCheckedChange={(checked) => setIsPrivateGame(checked as boolean)}\n                />\n                <Label htmlFor=\"isPrivateGame\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 flex items-center gap-1\">\n                  <Lock className=\"w-3 h-3\" /> Private Game\n                </Label>\n              </div>\n              <Button className=\"w-full mt-3\" onClick={handleCreateGameSession} disabled={!hostName.trim()}>Create Game Session</Button>\n            </>\n          )}\n          {activePanel === 'create' && createdGameCode && (\n            <>\n              <p className=\"text-lg font-semibold text-primary\">Game Session Created!</p>\n              <p className=\"text-sm text-muted-foreground mt-2 mb-1\">Share this code with your friends:</p>\n              <Card className=\"p-3 mb-4 bg-muted border-border\">\n                <p className=\"text-2xl font-mono font-bold text-center text-accent\">{createdGameCode}</p>\n              </Card>\n              <Button className=\"w-full mb-2\" variant=\"outline\" onClick={() => {\n                if (createdGameCode) {\n                  navigator.clipboard.writeText(createdGameCode);\n                  toast({ title: \"Code Copied!\", description: \"Game code copied to clipboard.\" });\n                }\n              }}>\n                <Copy className=\"w-4 h-4 mr-2\" /> Copy Code\n              </Button>\n\n              {firestoreGameStatus === 'Awaiting Players' && (\n                <Button\n                  className=\"w-full mb-2\"\n                  onClick={handleStartGame}\n                  disabled={localPlayers.length < MIN_PLAYERS_TO_START}\n                >\n                  <Play className=\"w-4 h-4 mr-2\" />\n                  Start Game ({localPlayers.length}/{MIN_PLAYERS_TO_START} min)\n                </Button>\n              )}\n              {firestoreGameStatus === 'In Progress' && (\n                <p className=\"text-sm text-center text-green-500 font-semibold py-2\">Game In Progress!</p>\n              )}\n               {firestoreGameStatus !== 'In Progress' && (\n                <Button\n                  className=\"w-full\"\n                  variant=\"destructive\"\n                  onClick={handleCancelGame}\n                >\n                  Cancel Game\n                </Button>\n               )}\n            </>\n          )}\n          {activePanel === 'join' && (\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"joiningPlayerName\" className=\"text-xs\">Your Name</Label>\n                <Input\n                  id=\"joiningPlayerName\"\n                  placeholder=\"Enter your name\"\n                  value={joiningPlayerName}\n                  onChange={(e) => setJoiningPlayerName(e.target.value)}\n                  className=\"mt-1\"\n                />\n              </div>\n              <Separator />\n              <div>\n                <h4 className=\"text-sm font-medium mb-2 flex items-center gap-1\"><ListChecks className=\"w-4 h-4\" /> Public Games</h4>\n                {isLoadingPublicGames && <div className=\"flex items-center justify-center p-2\"><Loader2 className=\"w-5 h-5 animate-spin text-muted-foreground\" /> <span className=\"ml-2 text-sm text-muted-foreground\">Loading games...</span></div>}\n                {!isLoadingPublicGames && publicGamesList.length === 0 && (\n                  <p className=\"text-xs text-muted-foreground text-center py-2\">No public games available.</p>\n                )}\n                {!isLoadingPublicGames && publicGamesList.length > 0 && (\n                  <ScrollArea className=\"max-h-48 pr-1\">\n                    <div className=\"space-y-2\">\n                      {publicGamesList.map(game => (\n                        <Card key={game.id} className=\"p-3 bg-muted/50 hover:bg-muted/80 transition-colors\">\n                          <div className=\"flex justify-between items-center\">\n                            <div>\n                              <p className=\"text-xs font-semibold\">Host: {game.players[0]?.name || 'Unknown Host'}</p>\n                              <p className=\"text-xs text-muted-foreground\">Code: {game.gameCode}</p>\n                            </div>\n                            <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                              <UsersRound className=\"w-3 h-3\" /> {game.players.length}/4\n                            </div>\n                          </div>\n                          <Button\n                            size=\"sm\"\n                            className=\"w-full mt-2\"\n                            variant=\"secondary\"\n                            onClick={async () => {\n                              const success = await handleJoinListedGame(game);\n                              if (success) setActivePanel(null);\n                            }}\n                            disabled={!joiningPlayerName.trim() || game.players.length >= 4 || firestoreGameStatus === 'In Progress' || game.status !== 'Awaiting Players'}\n                          >\n                            Join Game\n                          </Button>\n                        </Card>\n                      ))}\n                    </div>\n                  </ScrollArea>\n                )}\n              </div>\n              <Separator />\n              <div>\n                <Label htmlFor=\"joinGameCode\" className=\"text-xs\">Join by Code</Label>\n                <Input\n                  id=\"joinGameCode\"\n                  placeholder=\"Enter Game Code\"\n                  value={joinGameCode}\n                  onChange={(e) => setJoinGameCode(e.target.value.toUpperCase())}\n                  className=\"mt-1\"\n                />\n                <Button\n                  className=\"w-full mt-2\"\n                  onClick={async () => {\n                    const success = await handleJoinGame();\n                    if (success) setActivePanel(null);\n                  }}\n                  disabled={!joiningPlayerName.trim() || !joinGameCode.trim() || firestoreGameStatus === 'In Progress'}\n                >\n                  Join Game by Code\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </ScrollArea>\n    </Card>\n  );\n};\n\nexport default MultiplayerPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3500, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/StarSystemDetailsPanel.tsx"],"sourcesContent":["\n'use client';\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { XIcon, Sun } from 'lucide-react';\nimport type { StarSystem as StarSystemType, Planet as PlanetType, Player } from '@/types/game';\nimport { getStarSvgFillColor } from '@/components/StarMap';\n\ninterface StarSystemDetailsPanelProps {\n  selectedStarSystem: StarSystemType | undefined;\n  players: Player[];\n  showFogOfWar: boolean;\n  onClose: () => void;\n  isProductionTurn?: boolean;\n}\n\nconst StarSystemDetailsPanel: React.FC<StarSystemDetailsPanelProps> = ({\n  selectedStarSystem,\n  players,\n  showFogOfWar,\n  onClose,\n  isProductionTurn,\n}) => {\n  if (!selectedStarSystem || isProductionTurn) return null; // Hide panel during production turns\n\n  const ownerPlayer = players.find(p => p.id === selectedStarSystem.owner);\n\n  return (\n    <Card className=\"w-full md:w-1/3 lg:w-1/4 xl:w-1/5 h-full flex flex-col shadow-lg\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>{selectedStarSystem.name}</CardTitle>\n          <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={onClose}>\n            <XIcon className=\"w-4 h-4\" />\n          </Button>\n        </div>\n        <CardDescription className=\"flex items-center gap-1 text-sm\">\n          <Sun className=\"w-4 h-4\" style={{ color: selectedStarSystem.starColor ? getStarSvgFillColor(selectedStarSystem.starColor) : 'gray' }} />\n          {selectedStarSystem.starColor || 'N/A'} Star System\n        </CardDescription>\n      </CardHeader>\n      <ScrollArea className=\"flex-1\">\n        <CardContent className=\"space-y-3\">\n          <p className=\"text-sm\"><span className=\"font-semibold\">Status:</span> {selectedStarSystem.isExplored ? 'Explored' : 'Unexplored'}</p>\n          {selectedStarSystem.owner && ownerPlayer && (\n            <p className=\"text-sm\">\n              <span className=\"font-semibold\">Owner:</span> <span className={ownerPlayer.color}>{ownerPlayer.name || 'Unknown'}</span>\n            </p>\n          )}\n\n          {(selectedStarSystem.isExplored || !showFogOfWar) && selectedStarSystem.starCardNo && (\n            <p className=\"text-sm\"><span className=\"font-semibold\">Star Card Ref:</span> {selectedStarSystem.starCardNo}</p>\n          )}\n          {selectedStarSystem.isExplored && !selectedStarSystem.starCardNo && (\n            <p className=\"text-sm\"><span className=\"font-semibold\">Star Card Ref:</span> Anomaly (No Card Drawn)</p>\n          )}\n          {!selectedStarSystem.isExplored && showFogOfWar && (\n            <p className=\"text-sm\"><span className=\"font-semibold\">Star Card Ref:</span> Hidden</p>\n          )}\n\n          <h4 className=\"font-semibold mt-2\">Planets:</h4>\n          {selectedStarSystem.isExplored ? (\n            selectedStarSystem.planets.length > 0 ? (\n              <ul className=\"space-y-2\">\n                {selectedStarSystem.planets.map((planet: PlanetType) => (\n                  <li key={planet.id} className=\"text-xs p-2 border rounded-md bg-card/50\">\n                    <div className=\"font-medium\">{planet.name} (Orbit {planet.orbit}, Type: {planet.type})</div>\n                    <div>Max Pop: {planet.maxPopulation}M, Minerals: {planet.isMineralRich ? 'Rich' : 'Normal/Poor'}</div>\n                    {planet.colony && <div>Colony Level: {planet.colony.level}</div>}\n                  </li>\n                ))}\n              </ul>\n            ) : <p className=\"text-xs text-muted-foreground\">(No planets or no detailed scan yet)</p>\n          ) : (\n            <p className=\"text-xs text-muted-foreground\">(Details revealed upon exploration)</p>\n          )}\n        </CardContent>\n      </ScrollArea>\n    </Card>\n  );\n};\n\nexport default StarSystemDetailsPanel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3790, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/ManagementInfoPanel.tsx"],"sourcesContent":["\n'use client';\n\nimport Image from 'next/image';\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { XIcon, Factory, Ship, FlaskConical, Info, Users, TrendingUp, ChevronsRight, Coins, PlusCircle } from 'lucide-react';\nimport type { GameState, ResearchData, GameDataItem, Player, Planet, Colony, StarSystem, HexPosition } from '@/types/game';\nimport { parseAlphanumericCoordinate } from '@/components/StarMap'; // For parsing hex input\nimport { useToast } from '@/hooks/use-toast';\n\n\ninterface ManagementInfoPanelProps {\n  activePanel: 'colonies' | 'tech' | 'production' | 'fleet' | null;\n  gameState: GameState;\n  currentPlayer: Player | undefined;\n  onClose: () => void;\n  isProductionTurn?: boolean;\n  onBuildItem: (itemId: string) => void;\n  onAllocateResearch: (techId: string, pointsToAllocate: number) => void;\n  onCreateFleet: (targetPosition: HexPosition, shipsToAssign: Array<{ type: string; count: number }>) => void;\n}\n\nconst ManagementInfoPanel: React.FC<ManagementInfoPanelProps> = ({\n  activePanel,\n  gameState,\n  currentPlayer,\n  onClose,\n  isProductionTurn,\n  onBuildItem,\n  onAllocateResearch,\n  onCreateFleet,\n}) => {\n  if (!activePanel) return null;\n\n  const { toast } = useToast();\n  const [researchAllocation, setResearchAllocation] = useState<Record<string, string>>({});\n  const [showCreateFleetForm, setShowCreateFleetForm] = useState(false);\n  const [createFleetTargetHex, setCreateFleetTargetHex] = useState<string>('');\n  const [fleetScoutCount, setFleetScoutCount] = useState<string>('');\n  const [fleetCorvetteCount, setFleetCorvetteCount] = useState<string>('');\n  const [fleetColonyTransportCount, setFleetColonyTransportCount] = useState<string>('');\n\n\n  useEffect(() => {\n    if (activePanel !== 'fleet') {\n      setShowCreateFleetForm(false);\n      setCreateFleetTargetHex('');\n      setFleetScoutCount('');\n      setFleetCorvetteCount('');\n      setFleetColonyTransportCount('');\n    }\n  }, [activePanel]);\n\n  const handleNumericInputChange = (setter: React.Dispatch<React.SetStateAction<string>>, maxValue?: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    if (value === '' || /^[0-9\\b]+$/.test(value)) {\n      if (maxValue !== undefined && parseInt(value, 10) > maxValue) {\n        setter(maxValue.toString());\n      } else {\n        setter(value);\n      }\n    }\n  };\n  \n  const handleCreateFleetSubmit = () => {\n    if (!currentPlayer) return;\n\n    const targetPosition = parseAlphanumericCoordinate(createFleetTargetHex);\n    if (!targetPosition) {\n      toast({ title: \"Invalid Hex Coordinate\", description: \"Please enter a valid hex coordinate (e.g., A10, AF5).\", variant: \"destructive\"});\n      return;\n    }\n    \n    // Basic map boundary check (can be enhanced later)\n    if (targetPosition.col < 0 || targetPosition.col >= gameState.mapSettings.cols ||\n        targetPosition.row < 0 || targetPosition.row >= (targetPosition.col % 2 !== 0 ? gameState.mapSettings.rowsOdd : gameState.mapSettings.rowsEven) ) {\n        toast({ title: \"Invalid Hex Coordinate\", description: \"Target hex is outside map boundaries.\", variant: \"destructive\"});\n        return;\n    }\n\n\n    const shipsToAssign: Array<{ type: string; count: number }> = [];\n    const scouts = parseInt(fleetScoutCount, 10) || 0;\n    const corvettes = parseInt(fleetCorvetteCount, 10) || 0;\n    const colonyTransports = parseInt(fleetColonyTransportCount, 10) || 0;\n\n    if (scouts > 0) shipsToAssign.push({ type: 'Scout', count: scouts });\n    if (corvettes > 0) shipsToAssign.push({ type: 'Corvette', count: corvettes });\n    if (colonyTransports > 0) shipsToAssign.push({ type: 'ColonyTransport', count: colonyTransports });\n    \n    if (shipsToAssign.length > 0) {\n      onCreateFleet(targetPosition, shipsToAssign);\n      setShowCreateFleetForm(false);\n      setCreateFleetTargetHex('');\n      setFleetScoutCount('');\n      setFleetCorvetteCount('');\n      setFleetColonyTransportCount('');\n    } else {\n      toast({ title: \"No Ships Selected\", description: \"Please assign at least one ship to the task force.\", variant: \"destructive\"});\n    }\n  };\n\n\n  const handleResearchAllocationChange = (techId: string, value: string) => {\n    const cleanedValue = value.replace(/[^0-9]/g, ''); \n    setResearchAllocation(prev => ({ ...prev, [techId]: cleanedValue }));\n  };\n\n  const getTechIdByName = (name: string): string | undefined => {\n    const foundItem = gameState.gameDataItems.find(item => item.Name === name);\n    return foundItem ? foundItem.id : undefined;\n  };\n  \n  const allResearchItems = gameState.gameDataItems\n    .filter(item => item.PurchaseType === \"Ship Speed Research\" || item.PurchaseType === \"Weapon Research\" || item.PurchaseType === \"Technology Research\")\n    .map(item => {\n      let category: ResearchData['category'] = 'Unknown';\n      if (item.PurchaseType === \"Ship Speed Research\") category = 'Ship Speed';\n      else if (item.PurchaseType === \"Weapon Research\") category = 'Weapon';\n      else if (item.PurchaseType === \"Technology Research\") category = 'Technology';\n      \n      let level = 0;\n      if (typeof item.Level === 'number') level = item.Level;\n      else if (typeof item.Level === 'string' && item.Level !== '') level = parseInt(item.Level, 10);\n      else if (item.Level === '') level = 1; \n\n      return {\n        ...item,\n        id: item.id, \n        category,\n        level,\n      } as ResearchData;\n    });\n\n  const getEffectiveCost = (item: ResearchData | GameDataItem, player: Player | undefined): number => {\n    if (!player) return item.IPCost;\n    if (item.DiscountPrerequisit && typeof item.DiscountPrice === 'number' && item.DiscountPrice > 0) {\n      const prereqTechId = getTechIdByName(item.DiscountPrerequisit);\n      if (prereqTechId && player.researchedTechIds.includes(prereqTechId)) {\n        return item.DiscountPrice;\n      }\n    }\n    return item.IPCost;\n  };\n\n  const canResearchTech = (tech: ResearchData, player: Player | undefined): boolean => {\n    if (!player) return false;\n    if (player.researchedTechIds.includes(tech.id)) return false; \n\n    if (tech.ResearchPrerequisite) {\n      const prereqTechId = getTechIdByName(tech.ResearchPrerequisite);\n      if (!prereqTechId || !player.researchedTechIds.includes(prereqTechId)) {\n        return false;\n      }\n    }\n\n    if (tech.level > 1) {\n      const lowerLevelTechResearchedInCategory = allResearchItems.some(\n        prevTech =>\n          player.researchedTechIds.includes(prevTech.id) &&\n          prevTech.category === tech.category &&\n          prevTech.level === tech.level - 1\n      );\n      if (!lowerLevelTechResearchedInCategory) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const canBuildItem = (item: GameDataItem, player: Player | undefined, currentTurn: number): boolean => {\n    if (!player) return false;\n\n    if (currentTurn === 0) {\n        if (item.PurchaseType === \"Ship\") {\n            if (item.Name !== \"Scout\" && item.Name !== \"Corvette\") {\n                return false;\n            }\n            if (item.Name === \"Colony Transport\") return false; \n        } else if (item.PurchaseType === \"Planetary\") {\n            return false; \n        }\n    }\n\n    if (item.ResearchPrerequisite) {\n      const prereqTechId = getTechIdByName(item.ResearchPrerequisite);\n      if (!prereqTechId || !player.researchedTechIds.includes(prereqTechId)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const purchasableUnitsAndStructures = gameState.gameDataItems.filter(item =>\n    (item.PurchaseType === \"Ship\" || item.PurchaseType === \"Planetary\") && canBuildItem(item, currentPlayer, gameState.turn)\n  );\n\n  const availableResearch = allResearchItems.filter(tech => canResearchTech(tech, currentPlayer));\n\n  const relevantResearchForTechPanel = allResearchItems.filter(tech => {\n    if (!currentPlayer) return false;\n    return currentPlayer.researchedTechIds.includes(tech.id) || (currentPlayer.researchProgress[tech.id] || 0) > 0;\n  });\n\n  const playerOwnedColonies: { colony: Colony; planet: Planet; starSystem: StarSystem }[] = [];\n  if (currentPlayer) {\n    gameState.starSystems.forEach(starSystem => {\n      if (starSystem.owner === currentPlayer.id) {\n        starSystem.planets.forEach(planet => {\n          if (planet.colony && planet.colony.playerId === currentPlayer.id) {\n            playerOwnedColonies.push({ colony: planet.colony, planet, starSystem });\n          }\n        });\n      }\n    });\n  }\n\n  const handleAllocateButtonClick = (techId: string) => {\n    const points = parseInt(researchAllocation[techId] || \"0\");\n    if (points > 0) {\n      onAllocateResearch(techId, points);\n      setResearchAllocation(prev => ({ ...prev, [techId]: '' })); \n    }\n  };\n\n  return (\n    <Card className=\"w-full md:w-1/3 lg:w-1/4 xl:w-1/5 h-full flex flex-col shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"capitalize flex items-center justify-between\">\n          {activePanel === 'fleet' ? 'Fleet Management' : activePanel}\n          <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={onClose}>\n            <XIcon className=\"w-4 h-4\" />\n          </Button>\n        </CardTitle>\n      </CardHeader>\n      <ScrollArea className=\"flex-1\">\n        <CardContent>\n          {activePanel === 'production' && currentPlayer && (\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold mb-1\">Galactic Production</h3>\n                 <CardDescription className=\"text-xs text-muted-foreground italic\">\n                  Current Player Global PP: {currentPlayer.resources.productionPoints} (for Turn 0 and emergency use)\n                </CardDescription>\n                 <CardDescription className=\"text-xs text-muted-foreground italic mt-1\">\n                  (PP will be managed per colony. Unused PP are lost at the end of your production actions.)\n                </CardDescription>\n              </div>\n\n              <Card className=\"p-3 bg-muted/30\">\n                <CardHeader className=\"p-0 mb-2\">\n                    <CardTitle className=\"text-base\">Production Phases (Overview)</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0 text-xs space-y-2 text-muted-foreground\">\n                    <div>\n                        <h5 className=\"font-semibold text-sm text-foreground/80 flex items-center gap-1\"><Users className=\"w-3 h-3\" />1. Population Growth</h5>\n                        {isProductionTurn && playerOwnedColonies.length > 0 ? playerOwnedColonies.map(({ colony, planet, starSystem }) => {\n                            let growthAmount = 0;\n                            if (planet.type === 'Terran') {\n                                growthAmount = Math.floor(colony.population / 5);\n                            } else if (planet.type === 'Sub Terran') {\n                                growthAmount = Math.floor(colony.population / 10);\n                            }\n                            const newPopulation = colony.population + growthAmount;\n                            const excessPopulation = Math.max(0, newPopulation - planet.maxPopulation);\n\n                            return (\n                                <div key={colony.id} className=\"ml-2 my-1 p-2 border-l border-muted-foreground/50 text-xs\">\n                                    <p className=\"font-medium\">{colony.name} ({planet.type} on {planet.name}, {starSystem.name})</p>\n                                    <p>Current Pop: {colony.population}M</p>\n                                    <p>Growth: +{growthAmount}M</p>\n                                    <p>New Potential Pop: {newPopulation}M (Max: {planet.maxPopulation}M)</p>\n                                    {excessPopulation > 0 && <p className=\"text-amber-400\">Excess: {excessPopulation}M (must be transported or lost)</p>}\n                                </div>\n                            );\n                        }) : (\n                           <p className=\"ml-2 italic text-xs\">\n                            {isProductionTurn ? (gameState.turn === 0 ? \"No colonies established in Turn 0.\" : \"No colonies to grow population.\") : \"Not a production turn.\"}\n                           </p>\n                        )}\n                         <p className=\"text-xs mt-1 ml-2\">\n                            - Terran: +1M per 5M. Sub-Terran: +1M per 10M. Minimal/Barren: No growth.\n                            <br/>- Excess over max pop must be transported or is lost.\n                        </p>\n                    </div>\n                     <div>\n                        <h5 className=\"font-semibold text-sm text-foreground/80 flex items-center gap-1\"><Coins className=\"w-3 h-3\" />2. Calculate Production Points</h5>\n                        {isProductionTurn && playerOwnedColonies.length > 0 ? playerOwnedColonies.map(({ colony, planet, starSystem }) => {\n                            let growthAmount = 0; \n                            if (planet.type === 'Terran') growthAmount = Math.floor(colony.population / 5);\n                            else if (planet.type === 'Sub Terran') growthAmount = Math.floor(colony.population / 10);\n                            \n                            const populationAfterGrowth = colony.population + growthAmount;\n                            let colonyPP = populationAfterGrowth + colony.factoriesCount;\n                            if (planet.isMineralRich) {\n                                colonyPP *= 2;\n                            }\n\n                            return (\n                                <div key={`${colony.id}-pp`} className=\"ml-2 my-1 p-2 border-l border-muted-foreground/50 text-xs\">\n                                    <p className=\"font-medium\">{colony.name} ({planet.name}, {starSystem.name})</p>\n                                    <p>Pop (post-growth): {populationAfterGrowth}M (+{populationAfterGrowth} Base PP)</p>\n                                    <p>Factories: {colony.factoriesCount} (+{colony.factoriesCount} Base PP)</p>\n                                    <p>Mineral Rich Bonus: {planet.isMineralRich ? 'Yes (PP x2)' : 'No'}</p>\n                                    <p className=\"font-semibold\">Calculated PP for this colony: {colonyPP}</p>\n                                </div>\n                            );\n                        }) : (\n                           <p className=\"ml-2 italic text-xs\">\n                            {isProductionTurn ? (gameState.turn === 0 ? \"No colonies to calculate PP for in Turn 0.\" : \"No colonies to calculate PP for.\") : \"Not a production turn.\"}\n                           </p>\n                        )}\n                         <p className=\"text-xs mt-1 ml-2\">\n                            - +1 PP per 1M pop (after growth). +1 PP per factory.\n                            <br/>- Mineral Rich planets: Double total PP for that colony.\n                            <br/>- (Note: Game currently uses global PP for spending).\n                        </p>\n                    </div>\n                     <div>\n                        <h5 className=\"font-semibold text-sm text-foreground/80 flex items-center gap-1\"><ChevronsRight className=\"w-3 h-3\" />3. Build Colony Transports for Emigration</h5>\n                         <p className=\"ml-2 italic text-xs\">(Not Implemented Yet)</p>\n                         <p className=\"text-xs mt-1 ml-2\">\n                            - Cost: 1PP per transport. Reduces colony pop by 1M (excess first).\n                            <br/>- Emigration Bonus: +1M bonus pop (on own transport) for every 3M from growth emigrated. Max 3M bonus.\n                        </p>\n                    </div>\n                     <div>\n                        <h5 className=\"font-semibold text-sm text-foreground/80 flex items-center gap-1\"><Factory className=\"w-3 h-3\" />4. Spend Production Points</h5>\n                        <p className=\"ml-2 italic text-xs\">(Using Global PP for now. Per-colony spending and item placement not implemented)</p>\n                         <p className=\"text-xs mt-1 ml-2\">\n                            - Ships/Planetary: Pay in full by one colony. Items appear at that colony.\n                            <br/>- Research: Can be funded across colonies/turns.\n                        </p>\n                    </div>\n                </CardContent>\n              </Card>\n\n              <div>\n                <h4 className=\"font-semibold text-md mb-2 flex items-center gap-1\"><Ship className=\"w-4 h-4 text-primary\" />Build Units & Structures</h4>\n                {purchasableUnitsAndStructures.length > 0 ? purchasableUnitsAndStructures.map(item => (\n                  <Card key={item.id} className=\"p-3 mb-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <div>\n                        <p className=\"font-medium\">{item.Name} ({item.PurchaseType}) {item.Quantity && typeof item.Quantity === 'number' && item.Quantity > 1 ? `(x${item.Quantity})`:``}</p>\n                        <p className=\"text-xs text-muted-foreground\">Cost: {getEffectiveCost(item, currentPlayer)} PP</p>\n                      </div>\n                      <Button \n                        size=\"sm\" \n                        variant=\"secondary\" \n                        onClick={() => onBuildItem(item.id)}\n                        disabled={!isProductionTurn || (currentPlayer?.resources.productionPoints ?? 0) < getEffectiveCost(item, currentPlayer)}\n                      >\n                        Build\n                      </Button>\n                    </div>\n                    {item.Note && <p className=\"text-xs text-muted-foreground mt-1 italic\"><Info size={12} className=\"inline mr-1\"/>{item.Note}</p>}\n                    {!canBuildItem(item, currentPlayer, gameState.turn) && item.ResearchPrerequisite && (\n                        <p className=\"text-xs text-amber-500 mt-1\">Requires: {item.ResearchPrerequisite}</p>\n                    )}\n                     {gameState.turn === 0 && item.PurchaseType === \"Ship\" && item.Name === \"Colony Transport\" && (\n                        <p className=\"text-xs text-amber-500 mt-1\">Colony Transports cannot be built in Turn 0.</p>\n                    )}\n                     {gameState.turn === 0 && item.PurchaseType === \"Planetary\" && (\n                        <p className=\"text-xs text-amber-500 mt-1\">Planetary items cannot be built in Turn 0.</p>\n                    )}\n                  </Card>\n                )) : <p className=\"text-xs text-muted-foreground text-center py-2\">No items available to build (check research, turn number, or game phase).</p>}\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold text-md mb-2 flex items-center gap-1\"><FlaskConical className=\"w-4 h-4 text-primary\"/>Available Research</h4>\n                {availableResearch.length > 0 ? availableResearch.map(tech => {\n                  const currentProgress = currentPlayer.researchProgress[tech.id] || 0;\n                  const effectiveCost = getEffectiveCost(tech, currentPlayer);\n                  const remainingCost = Math.max(0, effectiveCost - currentProgress);\n                  const allocationAmount = parseInt(researchAllocation[tech.id] || \"0\");\n                  return (\n                    <Card key={tech.id} className=\"p-3 mb-2\">\n                      <p className=\"font-medium\">{tech.Name} <span className=\"text-xs text-muted-foreground\">({tech.category}, Lvl {tech.level})</span></p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Cost: {effectiveCost} PP {effectiveCost < tech.IPCost ? `(Discounted from ${tech.IPCost} PP)` : ''}\n                      </p>\n                       <div className=\"w-full bg-muted-foreground/20 rounded-full h-2.5 my-1\">\n                          <div className=\"bg-accent h-2.5 rounded-full\" style={{ width: `${effectiveCost > 0 ? (currentProgress / effectiveCost) * 100 : 0}%` }}></div>\n                      </div>\n                      <p className=\"text-xs\">{currentProgress}/{effectiveCost} RP accumulated. ({remainingCost} PP to complete)</p>\n                      {tech.Note && <p className=\"text-xs text-muted-foreground mt-1 italic\"><Info size={12} className=\"inline mr-1\"/>{tech.Note}</p>}\n                      \n                      <div className=\"flex items-center gap-2 mt-2\">\n                        <Input\n                            type=\"text\" \n                            pattern=\"[0-9]*\"\n                            inputMode=\"numeric\"\n                            min=\"0\"\n                            max={Math.min(currentPlayer.resources.productionPoints, remainingCost)}\n                            placeholder=\"PP to spend\"\n                            value={researchAllocation[tech.id] || ''}\n                            onChange={(e) => handleResearchAllocationChange(tech.id, e.target.value)}\n                            className=\"h-8 text-xs\"\n                            disabled={!isProductionTurn || remainingCost === 0 || playerOwnedColonies.length > 0 }\n                        />\n                        <Button \n                            size=\"sm\" \n                            variant=\"secondary\" \n                            className=\"h-8 text-xs\" \n                            onClick={() => handleAllocateButtonClick(tech.id)}\n                            disabled={\n                                !isProductionTurn || \n                                remainingCost === 0 || \n                                allocationAmount <= 0 ||\n                                allocationAmount > Math.min(currentPlayer.resources.productionPoints, remainingCost) ||\n                                playerOwnedColonies.length > 0 \n                            }\n                        >\n                            Allocate\n                        </Button>\n                      </div>\n                       {!canResearchTech(tech, currentPlayer) && tech.ResearchPrerequisite && (\n                         <p className=\"text-xs text-amber-500 mt-1\">Requires Tech: {tech.ResearchPrerequisite}</p>\n                       )}\n                       {!canResearchTech(tech, currentPlayer) && tech.level > 1 && !allResearchItems.some( prevTech => currentPlayer.researchedTechIds.includes(prevTech.id) && prevTech.category === tech.category && prevTech.level === tech.level - 1) && (\n                         <p className=\"text-xs text-amber-500 mt-1\">Requires Level {tech.level-1} {tech.category} tech.</p>\n                       )}\n                       {playerOwnedColonies.length > 0 && (\n                         <p className=\"text-xs text-amber-500 mt-1\">Research allocation will be per-colony soon.</p>\n                       )}\n                    </Card>\n                  );\n                }) : <p className=\"text-xs text-muted-foreground text-center py-2\">No new research available (check prerequisites or levels).</p>}\n              </div>\n            </div>\n          )}\n\n          {activePanel === 'fleet' && currentPlayer && (\n            <div className=\"space-y-4\">\n              <p className=\"text-sm text-muted-foreground\">Organize and dispatch your fleets.</p>\n              \n              <Card className=\"p-3 bg-muted/30\">\n                <CardHeader className=\"p-0 mb-2\">\n                    <CardTitle className=\"text-base\">Unassigned Ships</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0 text-xs space-y-1\">\n                    <p>Scouts: {currentPlayer?.resources.unassignedScouts ?? 0}</p>\n                    <p>Corvettes: {currentPlayer?.resources.unassignedCorvettes ?? 0}</p>\n                    <p>Colony Transports: {currentPlayer?.resources.unassignedColonyTransports ?? 0}</p>\n                </CardContent>\n              </Card>\n\n              {!showCreateFleetForm && (\n                <Button \n                    className=\"w-full\" \n                    onClick={() => setShowCreateFleetForm(true)}\n                    disabled={isProductionTurn}\n                >\n                    <PlusCircle className=\"w-4 h-4 mr-2\"/> Create New Task Force\n                </Button>\n              )}\n\n              {showCreateFleetForm && (\n                <Card className=\"p-4 space-y-3\">\n                    <CardTitle className=\"text-md\">New Task Force</CardTitle>\n                    <div>\n                        <Label htmlFor=\"targetHex\" className=\"text-xs\">Target Hex Coordinate</Label>\n                        <Input \n                            id=\"targetHex\"\n                            placeholder=\"e.g., A10 or AF5\"\n                            value={createFleetTargetHex}\n                            onChange={(e) => setCreateFleetTargetHex(e.target.value.toUpperCase())}\n                            className=\"mt-1 h-8 text-xs\"\n                            disabled={isProductionTurn}\n                        />\n                    </div>\n                    <div>\n                        <Label htmlFor=\"scoutCount\" className=\"text-xs\">Scouts (Available: {currentPlayer.resources.unassignedScouts || 0})</Label>\n                        <Input \n                            id=\"scoutCount\" type=\"text\" pattern=\"[0-9]*\" inputMode=\"numeric\" \n                            value={fleetScoutCount} \n                            onChange={handleNumericInputChange(setFleetScoutCount, currentPlayer.resources.unassignedScouts || 0)}\n                            placeholder=\"0\" \n                            className=\"mt-1 h-8 text-xs\"\n                            disabled={isProductionTurn || (currentPlayer.resources.unassignedScouts || 0) === 0}\n                        />\n                    </div>\n                    <div>\n                        <Label htmlFor=\"corvetteCount\" className=\"text-xs\">Corvettes (Available: {currentPlayer.resources.unassignedCorvettes || 0})</Label>\n                        <Input \n                            id=\"corvetteCount\" type=\"text\" pattern=\"[0-9]*\" inputMode=\"numeric\"\n                            value={fleetCorvetteCount} \n                            onChange={handleNumericInputChange(setFleetCorvetteCount, currentPlayer.resources.unassignedCorvettes || 0)}\n                            placeholder=\"0\" \n                            className=\"mt-1 h-8 text-xs\"\n                            disabled={isProductionTurn || (currentPlayer.resources.unassignedCorvettes || 0) === 0}\n                        />\n                    </div>\n                    <div>\n                        <Label htmlFor=\"colonyTransportCount\" className=\"text-xs\">Colony Transports (Available: {currentPlayer.resources.unassignedColonyTransports || 0})</Label>\n                        <Input \n                            id=\"colonyTransportCount\" type=\"text\" pattern=\"[0-9]*\" inputMode=\"numeric\"\n                            value={fleetColonyTransportCount} \n                            onChange={handleNumericInputChange(setFleetColonyTransportCount, currentPlayer.resources.unassignedColonyTransports || 0)}\n                            placeholder=\"0\" \n                            className=\"mt-1 h-8 text-xs\"\n                            disabled={isProductionTurn || (currentPlayer.resources.unassignedColonyTransports || 0) === 0}\n                        />\n                    </div>\n                    <div className=\"flex gap-2 mt-2\">\n                        <Button size=\"sm\" variant=\"outline\" onClick={() => setShowCreateFleetForm(false)} className=\"flex-1 text-xs h-8\">Cancel</Button>\n                        <Button \n                            size=\"sm\" \n                            onClick={handleCreateFleetSubmit} \n                            className=\"flex-1 text-xs h-8\"\n                            disabled={\n                                isProductionTurn ||\n                                !createFleetTargetHex.trim() ||\n                                ((parseInt(fleetScoutCount,10) || 0) === 0 && (parseInt(fleetCorvetteCount,10) || 0) === 0 && (parseInt(fleetColonyTransportCount,10) || 0) === 0)\n                            }\n                        >\n                            Confirm Create\n                        </Button>\n                    </div>\n                </Card>\n              )}\n              \n              <div className=\"mt-4 space-y-2\">\n                <h4 className=\"font-semibold text-md\">Deployed Task Forces</h4>\n                {gameState.fleets.filter(f => f.owner === currentPlayer?.id).length > 0 ? \n                  gameState.fleets.filter(f => f.owner === currentPlayer?.id).map(fleet => (\n                    <Card key={fleet.id} className=\"p-3\">\n                      <p className=\"font-semibold text-sm\">Task Force ID: ...{fleet.id.slice(-6)}</p>\n                      <p className=\"text-xs text-muted-foreground\">Location: Column {fleet.position.col +1 }, Row {fleet.position.row +1}</p>\n                      <ul className=\"text-xs list-disc list-inside pl-1 mt-1\">\n                        {fleet.ships.map(ship => <li key={ship.type}>{ship.count}x {ship.type}</li>)}\n                      </ul>\n                      <Button size=\"sm\" variant=\"secondary\" className=\"mt-2 w-full text-xs h-8\" disabled={isProductionTurn}>Manage Fleet</Button>\n                    </Card>\n                  ))\n                  : <p className=\"text-xs text-muted-foreground text-center py-2\">No task forces deployed yet.</p>\n                }\n              </div>\n            </div>\n          )}\n\n\n          {activePanel === 'colonies' && (\n             <div className=\"space-y-2\">\n              <p className=\"text-sm text-muted-foreground\">Manage your established colonies.</p>\n              <div data-ai-hint=\"planet colony buildings\" className=\"w-full h-32 bg-muted rounded-md flex items-center justify-center\">\n                <Image src=\"https://placehold.co/300x200.png\" alt=\"Colony placeholder\" width={150} height={100} className=\"rounded\" />\n              </div>\n              {playerOwnedColonies.length > 0 ?\n                playerOwnedColonies.map(({colony, planet, starSystem}) => (\n                    <Card key={colony.id} className=\"p-3 mb-2\">\n                        <p className=\"font-medium\">{colony.name} <span className=\"text-xs text-muted-foreground\">({planet.type} on {planet.name}, {starSystem.name})</span></p>\n                        <p className=\"text-xs\">Population: {colony.population}M / {planet.maxPopulation}M</p>\n                        <p className=\"text-xs\">Factories: {colony.factoriesCount}</p>\n                        <p className=\"text-xs\">Local PP: {colony.productionPoints}</p>\n                        <Button size=\"sm\" variant=\"outline\" className=\"w-full mt-1 text-xs\" disabled>Manage Colony (Not Impl.)</Button>\n                    </Card>\n                ))\n                : <p className=\"text-xs text-muted-foreground text-center py-2\">No colonies established yet.</p>\n              }\n            </div>\n          )}\n\n          {activePanel === 'tech' && currentPlayer && (\n            <div className=\"space-y-2\">\n              <p className=\"text-sm text-muted-foreground\">Overview of your researched and in-progress technologies.</p>\n              {relevantResearchForTechPanel.length > 0 ? relevantResearchForTechPanel.map(tech => {\n                const progress = currentPlayer.researchProgress[tech.id] || 0;\n                const isResearched = currentPlayer.researchedTechIds.includes(tech.id);\n                const effectiveCost = getEffectiveCost(tech, currentPlayer);\n                return (\n                    <Card key={tech.id} className=\"p-3\">\n                      <p className=\"font-semibold\">{tech.Name} <span className=\"text-xs text-muted-foreground\">({tech.category}, Lvl {tech.level})</span></p>\n                      <p className=\"text-xs text-muted-foreground\">{tech.Note || \"No description provided.\"}</p>\n                      <div className=\"w-full bg-muted-foreground/20 rounded-full h-2.5 my-1\">\n                          <div className=\"bg-accent h-2.5 rounded-full\" style={{ width: `${effectiveCost > 0 ? (progress / effectiveCost) * 100 : 0}%` }}></div>\n                      </div>\n                      <p className=\"text-xs\">{isResearched ? \"Completed\" : `${progress}/${effectiveCost} RP accumulated`}</p>\n                    </Card>\n                );\n                }) : <p className=\"text-xs text-muted-foreground text-center py-2\">No research completed or in progress.</p>}\n            </div>\n          )}\n        </CardContent>\n      </ScrollArea>\n    </Card>\n  );\n};\n\nexport default ManagementInfoPanel;\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5575, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/firebase/config.ts"],"sourcesContent":["\n// src/firebase/config.ts\n// console.log('--- Firebase config.ts: LOG 001 - File execution started ---');\n// console.log('--- Firebase config.ts: LOG 002 - Attempting to read NEXT_PUBLIC_FIREBASE_PROJECT_ID:', process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID);\n// console.log('--- Firebase config.ts: LOG 003 - Attempting to read NEXT_PUBLIC_FIREBASE_API_KEY:', process.env.NEXT_PUBLIC_FIREBASE_API_KEY);\n\nimport { initializeApp, getApps, type FirebaseApp } from 'firebase/app';\nimport { getFirestore, type Firestore } from 'firebase/firestore';\n\n// console.log('--- Firebase config.ts: LOG 004 - Firebase SDK imports successful ---');\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET, \n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// console.log('--- Firebase config.ts: LOG 005 - Constructed firebaseConfig object:', JSON.stringify(firebaseConfig, (key, value) => value === undefined ? 'VALUE_IS_UNDEFINED_IN_CONFIG_OBJECT' : value, 2));\n\nif (!firebaseConfig.projectId) {\n  const errorMessage = \"CRITICAL Firebase Config Error from src/firebase/config.ts: firebaseConfig.projectId is missing after construction. This means process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID was 'undefined' or empty. Check your .env.local file (it must be in the project root, variables must start with NEXT_PUBLIC_, and have no quotes around values). You MUST restart your Next.js dev server after any .env.local changes. If using Cloud Workstations or a similar environment, verify how client-side NEXT_PUBLIC_ variables are set and exposed.\";\n  console.error(errorMessage);\n  // if (typeof window !== 'undefined' && typeof alert !== 'undefined') { // Keep alert for critical failure\n    // alert(errorMessage);\n  // }\n  throw new Error(errorMessage);\n}\n// if (!firebaseConfig.apiKey) { // This check can be less critical for Firestore-only usage\n//   const warningMessage = \"Firebase Config WARNING from src/firebase/config.ts: firebaseConfig.apiKey is missing. This is usually required for most Firebase services.\";\n//   console.warn(warningMessage);\n// }\n\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\ntry {\n  if (getApps().length === 0) {\n    // console.log('--- Firebase config.ts: LOG 006 - No Firebase app initialized yet. Attempting initializeApp().');\n    app = initializeApp(firebaseConfig);\n    // console.log('--- Firebase config.ts: LOG 007 - Firebase app initialized successfully. Name:', app.name);\n  } else {\n    app = getApps()[0];\n    // console.log('--- Firebase config.ts: LOG 006 - Using existing Firebase app instance. Name:', app.name);\n  }\n\n  db = getFirestore(app);\n  // console.log('--- Firebase config.ts: LOG 008 - Firestore instance obtained successfully.');\n\n} catch (e) {\n  const initErrorMessage = '--- Firebase config.ts: LOG 009 - CRITICAL error during Firebase/Firestore initialization: ' + (e instanceof Error ? e.message : String(e));\n  console.error(initErrorMessage, e);\n  // if (typeof window !== 'undefined' && typeof alert !== 'undefined') { // Keep alert for critical failure\n    // alert(initErrorMessage);\n  // }\n  throw e; // Re-throw the error to ensure it's not swallowed\n}\n\n// console.log('--- Firebase config.ts: LOG 010 - Firebase setup presumed complete. Exporting db.');\nexport { app, db };\n"],"names":[],"mappings":"AACA,yBAAyB;AACzB,+EAA+E;AAC/E,qJAAqJ;AACrJ,+IAA+I;;;;;AAE/I;AAAA;AACA;AAAA;;;AAEA,wFAAwF;AAExF,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,+MAA+M;AAE/M,IAAI,CAAC,eAAe,SAAS,EAAE;IAC7B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC;IACd,0GAA0G;IACxG,uBAAuB;IACzB,IAAI;IACJ,MAAM,IAAI,MAAM;AAClB;AACA,4FAA4F;AAC5F,0KAA0K;AAC1K,kCAAkC;AAClC,IAAI;AAGJ,IAAI;AACJ,IAAI;AAEJ,IAAI;IACF,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;QAC1B,iHAAiH;QACjH,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;IACpB,2GAA2G;IAC7G,OAAO;QACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;IAClB,0GAA0G;IAC5G;IAEA,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAClB,8FAA8F;AAEhG,EAAE,OAAO,GAAG;IACV,MAAM,mBAAmB,gGAAgG,CAAC,aAAa,QAAQ,EAAE,OAAO,GAAG,OAAO,EAAE;IACpK,QAAQ,KAAK,CAAC,kBAAkB;IAChC,0GAA0G;IACxG,2BAA2B;IAC7B,IAAI;IACJ,MAAM,GAAG,kDAAkD;AAC7D","debugId":null}},
    {"offset": {"line": 5639, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/hooks/useGameSessionManagement.ts"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { db } from '@/firebase/config';\nimport { collection, addDoc, serverTimestamp, query, where, getDocs, doc, updateDoc, arrayUnion, onSnapshot, type Unsubscribe, deleteDoc, getDoc, type FirebaseError } from 'firebase/firestore';\nimport type { GameState, Player, GameSessionData, PlayerResources } from '@/types/game';\nimport { initialEntryPoints, playerConfigs as basePlayerConfigs, PRODUCTION_TURN_INTERVAL, INITIAL_TURN_0_PRODUCTION_POINTS, initialGameState as baseInitialGameState, MIN_PLAYERS_TO_START } from '@/data/game-init-data';\nimport { useToast } from '@/hooks/use-toast';\n\nfunction shuffleArray<T>(array: T[]): T[] {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n}\n\ninterface UseGameSessionManagementProps {\n  gameState: GameState;\n  setGameState: React.Dispatch<React.SetStateAction<GameState>>;\n  initialGameStateRef: React.MutableRefObject<GameState>;\n}\n\nconst LOCAL_STORAGE_GAME_ID_KEY = 'stellarConquestGameId';\nconst LOCAL_STORAGE_PLAYER_ID_KEY = 'stellarConquestPlayerId';\n\nexport const useGameSessionManagement = ({ gameState, setGameState, initialGameStateRef }: UseGameSessionManagementProps) => {\n  const { toast } = useToast();\n\n  const [createdGameCode, setCreatedGameCode] = useState<string | null>(null);\n  const [hostName, setHostName] = useState<string>(basePlayerConfigs[0]?.namePrefix || 'Player 1');\n  const [isPrivateGame, setIsPrivateGame] = useState<boolean>(false);\n  const [joinGameCode, setJoinGameCode] = useState('');\n  const [joiningPlayerName, setJoiningPlayerName] = useState<string>('');\n  const [publicGamesList, setPublicGamesList] = useState<GameSessionData[]>([]);\n  const [isLoadingPublicGames, setIsLoadingPublicGames] = useState<boolean>(false);\n  const [firestoreGameStatus, setFirestoreGameStatus] = useState<string>('setup');\n  const [localUserPlayerId, setLocalUserPlayerId] = useState<string | null>(null);\n  const [isEndingTurn, setIsEndingTurn] = useState(false);\n  const [isAttemptingRejoin, setIsAttemptingRejoin] = useState<boolean>(true);\n\n\n  const unsubscribeRef = useRef<Unsubscribe | null>(null);\n\n  useEffect(() => {\n    const attemptRejoin = async () => {\n      if (typeof window === 'undefined') {\n        setIsAttemptingRejoin(false);\n        return;\n      }\n\n      const storedGameId = localStorage.getItem(LOCAL_STORAGE_GAME_ID_KEY);\n      const storedPlayerId = localStorage.getItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n\n      if (storedGameId && storedPlayerId) {\n        try {\n          const gameDocRef = doc(db, \"gameSessions\", storedGameId);\n          const docSnap = await getDoc(gameDocRef);\n\n          if (docSnap.exists()) {\n            const gameData = { id: docSnap.id, ...docSnap.data() } as GameSessionData;\n            const playerInGame = gameData.players.some(p => p.playerId === storedPlayerId);\n\n            if ((gameData.status === 'In Progress' || gameData.status === 'Awaiting Players') && playerInGame) {\n              setLocalUserPlayerId(storedPlayerId);\n              setGameState(prev => ({ ...prev, gameId: gameData.id, gameDataItems: baseInitialGameState.gameDataItems }));\n              if (gameData.hostPlayerId === storedPlayerId) {\n                setCreatedGameCode(gameData.gameCode);\n              }\n            } else {\n              localStorage.removeItem(LOCAL_STORAGE_GAME_ID_KEY);\n              localStorage.removeItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n              if (gameData.status !== 'Awaiting Players' && gameData.status !== 'In Progress') {\n                 toast({ title: \"Rejoin Failed\", description: \"Previous game session has ended or was cancelled.\", variant: \"default\" });\n              } else if (!playerInGame) {\n                 toast({ title: \"Rejoin Failed\", description: \"Your player ID was not found in the previous game.\", variant: \"destructive\" });\n              }\n            }\n          } else {\n            localStorage.removeItem(LOCAL_STORAGE_GAME_ID_KEY);\n            localStorage.removeItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n          }\n        } catch (error) {\n          console.error(\"[useGameSessionManagement] Error attempting to rejoin game:\", error);\n          localStorage.removeItem(LOCAL_STORAGE_GAME_ID_KEY);\n          localStorage.removeItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n          toast({ title: \"Rejoin Error\", description: \"An error occurred while trying to rejoin.\", variant: \"destructive\" });\n        }\n      }\n      setIsAttemptingRejoin(false);\n    };\n\n    attemptRejoin();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const fetchPublicGames = useCallback(async () => {\n    setIsLoadingPublicGames(true);\n    try {\n      const q = query(\n        collection(db, \"gameSessions\"),\n        where(\"isPrivate\", \"==\", false),\n        where(\"status\", \"==\", \"Awaiting Players\")\n      );\n      const querySnapshot = await getDocs(q);\n      const games: GameSessionData[] = [];\n      querySnapshot.forEach((doc) => {\n        games.push({ id: doc.id, ...(doc.data() as Omit<GameSessionData, 'id'>) });\n      });\n      setPublicGamesList(games);\n    } catch (error) {\n      console.error(\"[useGameSessionManagement] Error fetching public games:\", error);\n      let description = \"Could not retrieve public game list.\";\n      if (error instanceof Error && (error as FirebaseError).code) {\n        description += ` Error: ${(error as FirebaseError).code}`;\n      }\n      toast({ title: \"Error Fetching Games\", description, variant: \"destructive\" });\n      setPublicGamesList([]);\n    } finally {\n      setIsLoadingPublicGames(false);\n    }\n  }, [toast]);\n\n  const handleCreateGameSession = useCallback(async () => {\n    if (!hostName.trim()) {\n      toast({ title: \"Name Required\", description: \"Please enter your name to host a game.\", variant: \"destructive\" });\n      return;\n    }\n\n    const hostBaseConfig = basePlayerConfigs[0];\n    const newShareableCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n    const assignedPlayerId = hostBaseConfig.idPrefix;\n\n    try {\n      const gameSessionFirestoreData: Omit<GameSessionData, 'id' | 'createdAt'> & { createdAt: any } = {\n        gameCode: newShareableCode,\n        hostPlayerId: assignedPlayerId,\n        status: 'Awaiting Players',\n        players: [{ playerId: assignedPlayerId, name: hostName, color: hostBaseConfig.colorValue, originalConfigId: hostBaseConfig.idPrefix }],\n        isPrivate: isPrivateGame,\n        createdAt: serverTimestamp(),\n        playerOrder: [],\n        turn: 0,\n        currentPlayerId: assignedPlayerId,\n      };\n\n      const docRef = await addDoc(collection(db, \"gameSessions\"), gameSessionFirestoreData);\n\n      localStorage.setItem(LOCAL_STORAGE_GAME_ID_KEY, docRef.id);\n      localStorage.setItem(LOCAL_STORAGE_PLAYER_ID_KEY, assignedPlayerId);\n      setLocalUserPlayerId(assignedPlayerId);\n\n      setCreatedGameCode(newShareableCode);\n      setGameState(prev => ({ ...prev, gameId: docRef.id, gamePhase: 'Awaiting Players', gameDataItems: baseInitialGameState.gameDataItems }));\n      toast({ title: \"Game Session Created!\", description: `Share code: ${newShareableCode}`});\n    } catch (error) {\n      console.error(\"[useGameSessionManagement] Error creating game session:\", error);\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      toast({ title: \"Error Creating Game\", description: `Could not save game session. Details: ${errorMessage}`, variant: \"destructive\" });\n    }\n  }, [hostName, isPrivateGame, toast, setGameState]);\n\n  const _processJoinAttempt = useCallback(async (gameSessionDocId: string, playerName: string) => {\n    if (!gameSessionDocId || typeof gameSessionDocId !== 'string') {\n        console.error(\"[useGameSessionManagement] Invalid gameSessionDocId passed to _processJoinAttempt:\", gameSessionDocId);\n        toast({ title: \"Internal Error\", description: \"Invalid game session identifier provided (dev).\", variant: \"destructive\" });\n        return false;\n    }\n    if (!playerName.trim()) {\n      toast({ title: \"Name Required (Join)\", description: \"Please enter your name to join.\", variant: \"destructive\" });\n      return false;\n    }\n\n    let gameSessionData: GameSessionData | null = null;\n    const gameDocRef = doc(db, \"gameSessions\", gameSessionDocId);\n    try {\n        const docSnap = await getDoc(gameDocRef);\n        if (docSnap.exists()) {\n            gameSessionData = {id: docSnap.id, ...docSnap.data()} as GameSessionData;\n        }\n    } catch (fetchError) {\n        console.error(\"[useGameSessionManagement] Error fetching game document for join:\", fetchError);\n        let description = \"Could not verify game session.\";\n        if (fetchError instanceof Error) {\n            description += ` Details: ${fetchError.message} ${(fetchError as FirebaseError).code ? `(${(fetchError as FirebaseError).code})` : '' }`;\n        }\n        toast({ title: \"Error Verifying Session\", description, variant: \"destructive\" });\n        return false;\n    }\n\n    if (!gameSessionData) {\n         toast({ title: \"Game Not Found (Post-Verification)\", description: \"The game session could not be found after verification attempt.\", variant: \"destructive\" });\n         return false;\n    }\n\n    if (gameSessionData.players.length >= 4) {\n      toast({ title: \"Game Full\", description: \"This game session is already full.\", variant: \"destructive\" });\n      return false;\n    }\n    if (gameSessionData.status !== 'Awaiting Players') {\n      toast({ title: \"Game Not Available\", description: `This game is currently ${gameSessionData.status} and cannot be joined.`, variant: \"destructive\" });\n      return false;\n    }\n\n    const nextPlayerConfigIndex = gameSessionData.players.length;\n    const newPlayerBaseConfig = basePlayerConfigs[nextPlayerConfigIndex];\n\n    if (!newPlayerBaseConfig) {\n      toast({ title: \"Error Joining Game (Config)\", description: \"No more player slots available (configuration issue).\", variant: \"destructive\" });\n      return false;\n    }\n    if (gameSessionData.players.some(p => p.originalConfigId === newPlayerBaseConfig.idPrefix)) {\n      toast({ title: \"Error Joining Game (Slot Taken)\", description: `Player slot for ${newPlayerBaseConfig.namePrefix} seems to be taken.`, variant: \"destructive\" });\n      return false;\n    }\n\n    const assignedPlayerId = newPlayerBaseConfig.idPrefix;\n    const newPlayerFirestoreData = {\n      playerId: assignedPlayerId,\n      name: playerName,\n      color: newPlayerBaseConfig.colorValue,\n      originalConfigId: newPlayerBaseConfig.idPrefix,\n    };\n\n    try {\n      await updateDoc(gameDocRef, {\n        players: arrayUnion(newPlayerFirestoreData)\n      });\n\n      localStorage.setItem(LOCAL_STORAGE_GAME_ID_KEY, gameSessionData!.id);\n      localStorage.setItem(LOCAL_STORAGE_PLAYER_ID_KEY, assignedPlayerId);\n      setLocalUserPlayerId(assignedPlayerId);\n\n      setGameState(prev => ({ ...prev, gameId: gameSessionData!.id, gamePhase: 'Awaiting Players', gameDataItems: baseInitialGameState.gameDataItems }));\n      setJoinGameCode('');\n      toast({ title: \"Game Joined!\", description: `${playerName} has joined game ${gameSessionData.gameCode}. Waiting for host to start...`, variant: \"default\" });\n      return true;\n    } catch (error) {\n      console.error(\"[useGameSessionManagement] Error updating game session with new player:\", error);\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      toast({ title: \"Error Finalizing Join\", description: `Failed to update game session. ${errorMessage}`, variant: \"destructive\" });\n      return false;\n    }\n  }, [toast, setGameState]);\n\n  const handleJoinGame = useCallback(async () => {\n    if (!joiningPlayerName.trim()) {\n      toast({ title: \"Name Required (Join)\", description: \"Please enter your name to join a game.\", variant: \"destructive\" });\n      return false;\n    }\n    if (!joinGameCode.trim()) {\n      toast({ title: \"Game Code Required (Join)\", description: \"Please enter a game code.\", variant: \"destructive\" });\n      return false;\n    }\n\n    try {\n      const q = query(collection(db, \"gameSessions\"), where(\"gameCode\", \"==\", joinGameCode.toUpperCase()));\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        toast({ title: \"Game Not Found (Code)\", description: \"No game session found with that code.\", variant: \"destructive\" });\n        return false;\n      }\n      const gameDoc = querySnapshot.docs[0];\n      return await _processJoinAttempt(gameDoc.id, joiningPlayerName);\n    } catch (error) {\n        console.error(\"[useGameSessionManagement] Error finding game by code:\", error);\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        toast({ title: \"Error Finding Game by Code\", description: `Could not retrieve game session. ${errorMessage}`, variant: \"destructive\" });\n        return false;\n    }\n  }, [joiningPlayerName, joinGameCode, toast, _processJoinAttempt]);\n\n  const handleJoinListedGame = useCallback(async (gameToJoin: GameSessionData) => {\n    if (!joiningPlayerName.trim()) {\n      toast({ title: \"Name Required (Listed Join)\", description: \"Please enter your name to join.\", variant: \"destructive\" });\n      return false;\n    }\n    return await _processJoinAttempt(gameToJoin.id, joiningPlayerName);\n  }, [joiningPlayerName, toast, _processJoinAttempt]);\n\n  const handleStartGame = useCallback(async () => {\n    if (!gameState.gameId) {\n        toast({ title: \"Error Starting Game (No ID)\", description: \"No active game session to start.\", variant: \"destructive\" });\n        return;\n    }\n\n    const gameSessionRef = doc(db, \"gameSessions\", gameState.gameId);\n    let currentFsGameData: GameSessionData | null = null;\n\n    try {\n      const docSnap = await getDoc(gameSessionRef);\n      if (docSnap.exists()) {\n        currentFsGameData = docSnap.data() as GameSessionData;\n      } else {\n        toast({ title: \"Error Starting Game (Not Found)\", description: \"Game session not found for start.\", variant: \"destructive\" });\n        return;\n      }\n    } catch (error) {\n       toast({ title: \"Error Starting Game (Fetch Data)\", description: \"Could not fetch current game data to start game.\", variant: \"destructive\" });\n       return;\n    }\n\n    if (!currentFsGameData || currentFsGameData.players.length < MIN_PLAYERS_TO_START) {\n         toast({ title: \"Not Enough Players to Start\", description: `Need at least ${MIN_PLAYERS_TO_START} players to start. Current: ${currentFsGameData?.players?.length || 0}`, variant: \"destructive\" });\n        return;\n    }\n\n    try {\n        const playerIdsInSession = currentFsGameData.players.map(p => p.playerId);\n        const shuffledPlayerIds = shuffleArray(playerIdsInSession);\n\n        await updateDoc(gameSessionRef, {\n            status: \"In Progress\",\n            playerOrder: shuffledPlayerIds,\n            currentPlayerId: shuffledPlayerIds[0],\n            turn: 0,\n        });\n    } catch (error) {\n        console.error(\"[useGameSessionManagement] Error updating game status to In Progress:\", error);\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        toast({ title: \"Error Starting Game (Update Status)\", description: `Could not update game status. ${errorMessage}`, variant: \"destructive\" });\n    }\n  }, [gameState.gameId, toast]);\n\n  const handleCancelGame = useCallback(async (isServerInitiated = false) => {\n    const gameIdToCancel = gameState.gameId;\n\n    if (typeof window !== 'undefined' && !isServerInitiated) {\n        localStorage.removeItem(LOCAL_STORAGE_GAME_ID_KEY);\n        localStorage.removeItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n        setLocalUserPlayerId(null);\n    } else if (isServerInitiated && gameIdToCancel && typeof window !== 'undefined') {\n        const storedGameId = localStorage.getItem(LOCAL_STORAGE_GAME_ID_KEY);\n        if (storedGameId === gameIdToCancel) {\n            localStorage.removeItem(LOCAL_STORAGE_GAME_ID_KEY);\n            localStorage.removeItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n            setLocalUserPlayerId(null);\n        }\n    }\n\n    if (unsubscribeRef.current) {\n      unsubscribeRef.current();\n      unsubscribeRef.current = null;\n    }\n\n    setCreatedGameCode(null);\n    setGameState(initialGameStateRef.current);\n    setHostName(basePlayerConfigs[0]?.namePrefix || 'Player 1 (Host)');\n    setIsPrivateGame(false);\n    setFirestoreGameStatus('setup');\n\n    if (!gameIdToCancel) {\n      if (!isServerInitiated) toast({ title: \"Game Creation Cancelled (Local)\", description: \"The game setup was reset locally.\" });\n      return;\n    }\n\n    try {\n      const gameDocRef = doc(db, \"gameSessions\", gameIdToCancel);\n      const gameDocSnap = await getDoc(gameDocRef);\n\n      if (gameDocSnap.exists()) {\n        if (gameDocSnap.data().status !== \"In Progress\" && !isServerInitiated) {\n          await deleteDoc(gameDocRef);\n          toast({ title: \"Game Session Cancelled & Deleted\", description: \"The game has been removed from the server.\" });\n        } else if (!isServerInitiated) {\n           await updateDoc(gameDocRef, { status: \"Cancelled\" });\n          toast({ title: \"Game Session Cancelled\", description: \"The game in progress has been marked as cancelled.\" });\n        }\n      } else if (!isServerInitiated) {\n         toast({ title: \"Game Already Removed\", description: \"The game session was not found on the server.\" });\n      }\n    } catch (error) {\n      console.error(\"[useGameSessionManagement] Error cancelling/deleting game session in Firestore:\", error);\n      if (!isServerInitiated) toast({ title: \"Cancellation Notice (Server Error)\", description: \"Local game state reset. Server interaction for cancellation failed.\", variant: \"destructive\" });\n    }\n  }, [gameState.gameId, toast, setGameState, initialGameStateRef]);\n\n\n  const handleEndTurn = useCallback(async () => {\n    if (!gameState.gameId || !gameState.currentPlayerId || gameState.players.length === 0 || isEndingTurn) {\n        if (!isEndingTurn) {\n            toast({ title: \"Cannot End Turn\", description: \"Game not ready or action already in progress.\", variant: \"destructive\" });\n        }\n        return;\n    }\n\n    if (gameState.currentPlayerId !== localUserPlayerId) {\n        toast({ title: \"Not Your Turn\", description: \"You cannot end another player's turn.\", variant: \"destructive\" });\n        return;\n    }\n\n    setIsEndingTurn(true);\n\n    try {\n        const gameSessionRef = doc(db, \"gameSessions\", gameState.gameId);\n\n        const currentSessionSnap = await getDoc(gameSessionRef);\n        if (!currentSessionSnap.exists()) {\n            throw new Error(\"Game session not found in Firestore during end turn.\");\n        }\n        const currentSessionData = currentSessionSnap.data() as GameSessionData;\n        const playerOrder = currentSessionData.playerOrder;\n\n        if (!playerOrder || playerOrder.length === 0) {\n             throw new Error(\"Player order not set in Firestore.\");\n        }\n\n        const currentPlayerIndexInOrder = playerOrder.findIndex(pid => pid === currentSessionData.currentPlayerId);\n        if (currentPlayerIndexInOrder === -1) {\n            throw new Error(\"Current player ID from Firestore not found in playerOrder.\");\n        }\n\n        let nextPlayerId: string;\n        let nextTurn = currentSessionData.turn !== undefined ? currentSessionData.turn : 0;\n\n        const currentLocalGameTurn = gameState.turn;\n        const isCurrentTurnAProductionGameTurn = currentLocalGameTurn === 0 || (currentLocalGameTurn > 0 && currentLocalGameTurn % PRODUCTION_TURN_INTERVAL === 0);\n\n        if (isCurrentTurnAProductionGameTurn && localUserPlayerId) {\n            setGameState(prev => ({\n                ...prev,\n                players: prev.players.map(p =>\n                    p.id === localUserPlayerId ? { ...p, resources: { ...p.resources, productionPoints: 0 } } : p\n                ),\n            }));\n            toast({ title: \"Production Actions Ended\", description: \"Unused Production Points lost.\" });\n        }\n\n\n        if (currentPlayerIndexInOrder + 1 < playerOrder.length) {\n            nextPlayerId = playerOrder[currentPlayerIndexInOrder + 1];\n        } else {\n            nextPlayerId = playerOrder[0];\n            nextTurn = nextTurn + 1;\n        }\n\n        await updateDoc(gameSessionRef, {\n            currentPlayerId: nextPlayerId,\n            turn: nextTurn,\n        });\n\n    } catch (error) {\n        console.error(\"[useGameSessionManagement] Error ending turn:\", error);\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        toast({ title: \"Error Ending Turn\", description: errorMessage, variant: \"destructive\" });\n    } finally {\n        setIsEndingTurn(false);\n    }\n  }, [gameState.gameId, gameState.currentPlayerId, gameState.players, gameState.turn, localUserPlayerId, isEndingTurn, toast, setGameState]);\n\n\n  useEffect(() => {\n    if (!gameState.gameId) {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (!isAttemptingRejoin) {\n        setFirestoreGameStatus('setup');\n      }\n      return;\n    }\n\n    if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n    }\n\n    const gameSessionRef = doc(db, \"gameSessions\", gameState.gameId);\n    unsubscribeRef.current = onSnapshot(gameSessionRef, (docSnap) => {\n      if (docSnap.exists()) {\n        const gameSessionData = { id: docSnap.id, ...docSnap.data() } as GameSessionData;\n\n        if (!localUserPlayerId && gameSessionData.id && typeof window !== 'undefined') {\n            const storedGameId = localStorage.getItem(LOCAL_STORAGE_GAME_ID_KEY);\n            const storedPlayerId = localStorage.getItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n            if (storedGameId === gameSessionData.id && storedPlayerId) {\n                if (gameSessionData.players.some(p => p.playerId === storedPlayerId)) {\n                    setLocalUserPlayerId(storedPlayerId);\n                } else {\n                    localStorage.removeItem(LOCAL_STORAGE_PLAYER_ID_KEY);\n                }\n            }\n        }\n\n        setFirestoreGameStatus(gameSessionData.status);\n\n        const reconstructPlayers = (fsPlayers: GameSessionData['players'], playerOrderFromFS?: string[]): Player[] => {\n          const orderedFsPlayers: GameSessionData['players'] = [];\n          if (playerOrderFromFS && playerOrderFromFS.length > 0) {\n            playerOrderFromFS.forEach(orderedPlayerId => {\n              const p = fsPlayers.find(fp => fp.playerId === orderedPlayerId);\n              if (p) orderedFsPlayers.push(p);\n            });\n            fsPlayers.forEach(fp => {\n              if (!orderedFsPlayers.some(op => op.playerId === fp.playerId)) {\n                orderedFsPlayers.push(fp);\n              }\n            });\n          } else {\n            orderedFsPlayers.push(...fsPlayers);\n          }\n\n          return orderedFsPlayers.map(fsPlayer => {\n            const pConf = basePlayerConfigs.find(pc => pc.idPrefix === fsPlayer.originalConfigId);\n            const currentLocalPlayer = gameState.players.find(p => p.id === fsPlayer.playerId);\n\n            let playerResources: PlayerResources;\n            if (currentLocalPlayer) {\n                playerResources = currentLocalPlayer.resources;\n            } else if (pConf) {\n                playerResources = { ...pConf.initialResources, productionPoints: (gameSessionData.turn === 0 ? INITIAL_TURN_0_PRODUCTION_POINTS : 0) };\n            } else {\n                playerResources = { productionPoints: (gameSessionData.turn === 0 ? INITIAL_TURN_0_PRODUCTION_POINTS : 0), unassignedScouts: 0, unassignedCorvettes: 0, unassignedColonyTransports: 0 };\n            }\n\n            let assignedEntryPointId: string | undefined;\n            if (gameSessionData.status === 'In Progress' && playerOrderFromFS && playerOrderFromFS.length > 0) {\n                const playerIndexInOrder = playerOrderFromFS.indexOf(fsPlayer.playerId);\n                if (playerIndexInOrder !== -1 && playerIndexInOrder < initialEntryPoints.length) {\n                    assignedEntryPointId = initialEntryPoints[playerIndexInOrder].id;\n                } else {\n                    const originalConfigIndex = basePlayerConfigs.findIndex(bc => bc.idPrefix === fsPlayer.originalConfigId);\n                    if (originalConfigIndex !== -1 && originalConfigIndex < initialEntryPoints.length) {\n                        assignedEntryPointId = initialEntryPoints[originalConfigIndex].id;\n                    }\n                }\n            } else {\n                const originalConfigIndex = basePlayerConfigs.findIndex(bc => bc.idPrefix === fsPlayer.originalConfigId);\n                if (originalConfigIndex !== -1 && originalConfigIndex < initialEntryPoints.length) {\n                    assignedEntryPointId = initialEntryPoints[originalConfigIndex].id;\n                }\n            }\n\n            return {\n              id: fsPlayer.playerId,\n              name: fsPlayer.name,\n              color: fsPlayer.color,\n              originalConfigId: fsPlayer.originalConfigId,\n              resources: playerResources,\n              entryPointId: assignedEntryPointId,\n              researchedTechIds: currentLocalPlayer?.researchedTechIds || [],\n              researchProgress: currentLocalPlayer?.researchProgress || {},\n            };\n          });\n        };\n\n        if (gameSessionData.status === 'Awaiting Players') {\n            const updatedLocalPlayersFromFS = reconstructPlayers(gameSessionData.players, gameSessionData.playerOrder);\n             setGameState(prevGameState => ({\n                ...prevGameState,\n                players: updatedLocalPlayersFromFS,\n                gamePhase: 'Awaiting Players',\n                gameDataItems: prevGameState.gameDataItems.length > 0 ? prevGameState.gameDataItems : baseInitialGameState.gameDataItems,\n                turn: gameSessionData.turn !== undefined ? gameSessionData.turn : prevGameState.turn,\n                currentPlayerId: gameSessionData.currentPlayerId || prevGameState.currentPlayerId,\n             }));\n        } else if (gameSessionData.status === 'In Progress') {\n           const updatedPlayersFromFS = reconstructPlayers(gameSessionData.players, gameSessionData.playerOrder);\n           setGameState(prev => ({\n              ...prev,\n              gameId: gameSessionData.id,\n              gamePhase: 'playing',\n              gameDataItems: prev.gameDataItems.length > 0 ? prev.gameDataItems : baseInitialGameState.gameDataItems,\n              currentPlayerId: gameSessionData.currentPlayerId || (updatedPlayersFromFS.length > 0 ? updatedPlayersFromFS[0].id : null),\n              turn: gameSessionData.turn !== undefined ? gameSessionData.turn : 0,\n              players: updatedPlayersFromFS,\n           }));\n           if (!isAttemptingRejoin && !gameState.gameId && prev.gamePhase !== 'playing') { // Check previous gamePhase\n             toast({ title: \"Game Started!\", description: \"The battle for the galaxy begins!\" });\n           }\n\n        } else if (gameSessionData.status === 'Cancelled') {\n            toast({ title: \"Game Cancelled by Host\", description: \"This game session was cancelled.\"});\n            handleCancelGame(true);\n        }\n      } else {\n        toast({ title: \"Game Session Ended/Removed\", description: \"The game session is no longer available.\", variant: \"destructive\" });\n        handleCancelGame(true);\n      }\n    }, (error) => {\n        console.error(\"[useGameSessionManagement] Error in Firestore listener for gameId:\", gameState.gameId, error);\n        let description = \"Lost connection to game session.\";\n        if (error instanceof Error && (error as FirebaseError).code) {\n            description += ` Error Code: ${(error as FirebaseError).code}`;\n        }\n        toast({ title: \"Connection Error to Game\", description, variant: \"destructive\"});\n    });\n\n    return () => {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameState.gameId, toast, setGameState, handleCancelGame, initialGameStateRef, isAttemptingRejoin, localUserPlayerId]);\n\n  return {\n    createdGameCode,\n    hostName,\n    setHostName,\n    isPrivateGame,\n    setIsPrivateGame,\n    joinGameCode,\n    setJoinGameCode,\n    joiningPlayerName,\n    setJoiningPlayerName,\n    publicGamesList,\n    isLoadingPublicGames,\n    firestoreGameStatus,\n    localUserPlayerId,\n    isEndingTurn,\n    isAttemptingRejoin,\n    fetchPublicGames,\n    handleCreateGameSession,\n    handleJoinGame,\n    handleJoinListedGame,\n    handleStartGame,\n    handleCancelGame,\n    handleEndTurn,\n  };\n};\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6371, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/howel/my-stellar-conquest-app/src/components/GameClient.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport Image from 'next/image';\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarMenu,\n  SidebarMenuItem,\n  SidebarMenuButton,\n  SidebarInset,\n  SidebarTrigger,\n  SidebarGroup,\n  SidebarGroupLabel,\n} from '@/components/ui/sidebar';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport StarMap, { parseAlphanumericCoordinate, hexDistance } from '@/components/StarMap';\nimport TutorialAssistantDialog from '@/components/TutorialAssistantDialog';\nimport MultiplayerPanel from '@/components/MultiplayerPanel';\nimport StarSystemDetailsPanel from '@/components/StarSystemDetailsPanel';\nimport ManagementInfoPanel from '@/components/ManagementInfoPanel';\n\nimport type { GameState, Player, StarSystem as StarSystemType, Fleet as FleetType, Planet as PlanetType, GameSessionData, GameDataItem, ResearchData, HexPosition, CommandPost } from '@/types/game';\nimport {\n  Users,\n  Orbit,\n  FlaskConical,\n  Bot,\n  Rocket,\n  Factory,\n  ChevronRight,\n  History,\n  Settings,\n  PanelLeft,\n  Eye,\n  EyeOff,\n  Network,\n  PlusSquare,\n  LogIn,\n  Warehouse,\n  Ship,\n  Loader2,\n  Move,\n} from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\nimport { useToast } from '@/hooks/use-toast';\nimport {\n  initialGameState as baseInitialGameState,\n  initialStarSystems,\n  initialEntryPoints,\n  MIN_PLAYERS_TO_START,\n  INITIAL_TURN_0_PRODUCTION_POINTS,\n  REGULAR_PRODUCTION_POINTS,\n  PRODUCTION_TURN_INTERVAL\n} from '@/data/game-init-data';\nimport { useGameSessionManagement } from '@/hooks/useGameSessionManagement';\n\n// Helper function to calculate fleet speed\nconst calculatePlayerFleetSpeed = (player: Player | undefined, gameDataItems: GameDataItem[]): number => {\n  const baseSpeed = 2;\n  let maxSpeedBonus = 0;\n\n  if (player && player.researchedTechIds && gameDataItems) {\n    player.researchedTechIds.forEach(techId => {\n      const techItem = gameDataItems.find(item => item.id === techId);\n      if (techItem && techItem.PurchaseType === \"Ship Speed Research\") {\n        const bonus = Number(techItem.ShipSpeedBonus);\n        if (!isNaN(bonus) && bonus > maxSpeedBonus) {\n          maxSpeedBonus = bonus;\n        }\n      }\n    });\n  }\n  return baseSpeed + maxSpeedBonus;\n};\n\n\nconst GameClient = () => {\n  const initialGameStateRef = useRef(JSON.parse(JSON.stringify(baseInitialGameState)));\n  const [gameState, setGameState] = useState<GameState>(initialGameStateRef.current);\n  const [isTutorialOpen, setIsTutorialOpen] = useState(false);\n  const [activeManagementPanel, setActiveManagementPanel] = useState<'colonies' | 'tech' | 'production' | 'fleet' | null>(null);\n  const [activeMultiplayerPanel, setActiveMultiplayerPanel] = useState<'create' | 'join' | null>(null);\n  const [showFogOfWar, setShowFogOfWar] = useState(true);\n  const [isClient, setIsClient] = useState(false);\n  const [selectedStarSystemId, setSelectedStarSystemId] = useState<string | null>(null);\n  const [selectedFleetId, setSelectedFleetId] = useState<string | null>(null);\n  const [isMovingFleet, setIsMovingFleet] = useState(false);\n\n  const { toast } = useToast();\n  const prevTurnRef = useRef<number>(gameState.turn);\n  const prevPlayerIdRef = useRef<string | null>(gameState.currentPlayerId);\n\n\n  const gameSession = useGameSessionManagement({ gameState, setGameState, initialGameStateRef });\n  const {\n    createdGameCode,\n    hostName, setHostName,\n    isPrivateGame, setIsPrivateGame,\n    joinGameCode, setJoinGameCode,\n    joiningPlayerName, setJoiningPlayerName,\n    publicGamesList,\n    isLoadingPublicGames,\n    firestoreGameStatus,\n    localUserPlayerId,\n    isEndingTurn,\n    isAttemptingRejoin,\n    fetchPublicGames,\n    handleCreateGameSession,\n    handleJoinGame,\n    handleJoinListedGame,\n    handleStartGame,\n    handleCancelGame,\n    handleEndTurn,\n  } = gameSession;\n\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  useEffect(() => {\n    if (firestoreGameStatus === 'In Progress' && gameState.gamePhase === 'playing' && gameState.players.length > 0 && gameState.gameId) {\n        const needsBoardInit = gameState.starSystems === initialGameStateRef.current.starSystems ||\n                               (gameState.fleets.length === 0 && gameState.players.some(p => p.entryPointId)) ||\n                               (gameState.commandPosts.length === 0 && gameState.players.length > 0);\n\n\n        if (needsBoardInit) {\n            let newLocalStarSystems = initialStarSystems.map(ss => ({\n                ...ss,\n                isExplored: false,\n                owner: undefined,\n                planets: [],\n            }));\n\n            const playersFromGameState = gameState.players;\n            let newLocalFleets: FleetType[] = [];\n            let newLocalCommandPosts: CommandPost[] = [];\n\n            playersFromGameState.forEach(player => {\n                const entryPoint = initialEntryPoints.find(ep => ep.id === player.entryPointId);\n                if (entryPoint) {\n                    const entrySystemIndex = newLocalStarSystems.findIndex(ss =>\n                        ss.position.col === entryPoint.position.col && ss.position.row === entryPoint.position.row\n                    );\n                    if (entrySystemIndex !== -1) {\n                        newLocalStarSystems[entrySystemIndex] = {\n                            ...newLocalStarSystems[entrySystemIndex],\n                            isExplored: true,\n                            owner: player.id,\n                        };\n                    }\n                    \n                    if (!gameState.fleets.some(f => f.owner === player.id && f.position.col === entryPoint.position.col && f.position.row === entryPoint.position.row)) {\n                        newLocalFleets.push({\n                            id: `fleet_start_${player.id}_${Date.now()}`,\n                            owner: player.id,\n                            ships: [\n                                { type: 'Scout', count: player.resources.unassignedScouts || 0 },\n                                { type: 'Corvette', count: player.resources.unassignedCorvettes || 0 },\n                                { type: 'ColonyTransport', count: player.resources.unassignedColonyTransports || 0 },\n                            ].filter(s => s.count > 0), \n                            position: entryPoint.position,\n                        });\n                    }\n                     \n                    if (!gameState.commandPosts.some(cp => cp.owner === player.id && cp.position.col === entryPoint.position.col && cp.position.row === entryPoint.position.row)) {\n                        newLocalCommandPosts.push({\n                            id: `cmd_post_${player.id}_initial_${Date.now()}`,\n                            owner: player.id,\n                            position: entryPoint.position,\n                        });\n                    }\n                }\n            });\n\n            setGameState(prev => ({\n                ...prev,\n                starSystems: newLocalStarSystems,\n                fleets: prev.fleets.length > 0 ? prev.fleets : newLocalFleets.filter(f => f.ships.length > 0),\n                commandPosts: prev.commandPosts.length > 0 ? prev.commandPosts : newLocalCommandPosts, \n            }));\n            setActiveMultiplayerPanel(null);\n            setActiveManagementPanel(null);\n        }\n    }\n  }, [firestoreGameStatus, gameState.gamePhase, gameState.gameId, gameState.players, gameState.starSystems, gameState.fleets, gameState.commandPosts, setGameState, initialGameStateRef]);\n\n\n  useEffect(() => {\n    if (gameState.gamePhase !== 'playing' || !isClient || gameState.players.length === 0) return;\n\n    const currentTurn = gameState.turn;\n    const currentPlayer = gameState.players.find(p => p.id === gameState.currentPlayerId);\n    const isGameTurnChange = prevTurnRef.current !== currentTurn;\n\n    if (isGameTurnChange) {\n      if (currentTurn === 0 && prevTurnRef.current === -1) { \n        toast({ title: `Game Turn 0: Initial Production Phase!`, description: `All players receive ${INITIAL_TURN_0_PRODUCTION_POINTS} PP.` });\n        setGameState(prev => ({\n          ...prev,\n          players: prev.players.map(player => ({\n            ...player,\n            resources: {\n              ...player.resources,\n              productionPoints: INITIAL_TURN_0_PRODUCTION_POINTS,\n            }\n          }))\n        }));\n      } else if (currentTurn > 0) { \n        if (currentTurn % PRODUCTION_TURN_INTERVAL === 0) { \n          toast({ title: `Game Turn ${currentTurn}: Production Phase!`, description: `All players receive ${REGULAR_PRODUCTION_POINTS} PP.` });\n          setGameState(prev => ({\n            ...prev,\n            players: prev.players.map(player => ({\n              ...player,\n              resources: {\n                ...player.resources,\n                productionPoints: player.resources.productionPoints + REGULAR_PRODUCTION_POINTS,\n              }\n            }))\n          }));\n        } else { \n          toast({ title: `Game Turn ${currentTurn} begins.` });\n        }\n      }\n    }\n\n    if (!isGameTurnChange && prevPlayerIdRef.current !== gameState.currentPlayerId && currentPlayer) {\n      const currentTurnIsProduction = currentTurn === 0 || (currentTurn > 0 && currentTurn % PRODUCTION_TURN_INTERVAL === 0);\n      if (currentTurnIsProduction) {\n        toast({ title: `Production - Player Turn: ${currentPlayer.name}` });\n      } else {\n        toast({ title: `Player Turn: ${currentPlayer.name}` });\n      }\n    }\n\n    prevTurnRef.current = currentTurn;\n    prevPlayerIdRef.current = gameState.currentPlayerId;\n\n  }, [gameState.turn, gameState.currentPlayerId, gameState.gamePhase, gameState.players, toast, setGameState, isClient]);\n\n\n  const isCurrentTurnAProductionGameTurn = gameState.gamePhase === 'playing' && (gameState.turn === 0 || (gameState.turn > 0 && gameState.turn % PRODUCTION_TURN_INTERVAL === 0));\n\n  const getTechIdByName = (name: string): string | undefined => {\n    const foundItem = gameState.gameDataItems.find(item => item.Name === name);\n    return foundItem ? foundItem.id : undefined;\n  };\n\n  const getEffectiveCost = (item: ResearchData | GameDataItem, player: Player | undefined): number => {\n    if (!player) return item.IPCost;\n    if (item.DiscountPrerequisit && typeof item.DiscountPrice === 'number' && item.DiscountPrice > 0) {\n      const prereqTechId = getTechIdByName(item.DiscountPrerequisit);\n      if (prereqTechId && player.researchedTechIds.includes(prereqTechId)) {\n        return item.DiscountPrice;\n      }\n    }\n    return item.IPCost;\n  };\n\n  const handleBuildItem = (itemId: string) => {\n    const itemToBuild = gameState.gameDataItems.find(item => item.id === itemId);\n    const currentPlayer = gameState.players.find(p => p.id === gameState.currentPlayerId);\n\n    if (!itemToBuild || !currentPlayer) {\n      toast({ title: \"Build Error\", description: \"Item or player not found.\", variant: \"destructive\" });\n      return;\n    }\n\n    const cost = getEffectiveCost(itemToBuild, currentPlayer);\n\n    if (currentPlayer.resources.productionPoints < cost) {\n      toast({ title: \"Insufficient PP\", description: `Not enough Production Points to build ${itemToBuild.Name}. Need ${cost} PP.`, variant: \"destructive\" });\n      return;\n    }\n\n    setGameState(prev => {\n      const updatedPlayers = prev.players.map(p => {\n        if (p.id === currentPlayer.id) {\n          let updatedResources = { ...p.resources, productionPoints: p.resources.productionPoints - cost };\n\n          if (itemToBuild.PurchaseType === \"Ship\") {\n            const quantity = typeof itemToBuild.Quantity === 'number' ? itemToBuild.Quantity : 1;\n            if (itemToBuild.Name === \"Scout\") {\n              updatedResources.unassignedScouts = (updatedResources.unassignedScouts || 0) + quantity;\n            } else if (itemToBuild.Name === \"Corvette\") {\n              updatedResources.unassignedCorvettes = (updatedResources.unassignedCorvettes || 0) + quantity;\n            } else if (itemToBuild.Name === \"Colony Transport\") {\n              updatedResources.unassignedColonyTransports = (updatedResources.unassignedColonyTransports || 0) + quantity;\n            }\n          }\n          return { ...p, resources: updatedResources };\n        }\n        return p;\n      });\n      return { ...prev, players: updatedPlayers };\n    });\n\n    toast({ title: \"Item Built!\", description: `${itemToBuild.Name} successfully built. Cost: ${cost} PP.` });\n  };\n\n  const handleAllocateResearch = (techId: string, pointsToAllocate: number) => {\n    const techToResearch = gameState.gameDataItems.find(item => item.id === techId) as ResearchData | undefined;\n    const currentPlayer = gameState.players.find(p => p.id === gameState.currentPlayerId);\n\n    if (!techToResearch || !currentPlayer) {\n      toast({ title: \"Research Error\", description: \"Technology or player not found.\", variant: \"destructive\" });\n      return;\n    }\n\n    if (pointsToAllocate <= 0) {\n        toast({ title: \"Invalid Allocation\", description: \"Points to allocate must be greater than zero.\", variant: \"destructive\" });\n        return;\n    }\n\n    const effectiveCost = getEffectiveCost(techToResearch, currentPlayer);\n    const currentProgress = currentPlayer.researchProgress[techId] || 0;\n    const remainingCost = Math.max(0, effectiveCost - currentProgress);\n\n    if (pointsToAllocate > remainingCost) {\n      toast({ title: \"Allocation Error\", description: `Cannot allocate more than remaining cost (${remainingCost} PP).`, variant: \"destructive\" });\n      return;\n    }\n\n    if (currentPlayer.resources.productionPoints < pointsToAllocate) {\n      toast({ title: \"Insufficient PP\", description: `Not enough Production Points. Need ${pointsToAllocate} PP.`, variant: \"destructive\" });\n      return;\n    }\n\n    setGameState(prev => {\n      const updatedPlayers = prev.players.map(p => {\n        if (p.id === currentPlayer.id) {\n          const newProgress = currentProgress + pointsToAllocate;\n          const updatedResearchProgress = { ...p.researchProgress, [techId]: newProgress };\n          let updatedResearchedTechIds = [...p.researchedTechIds];\n\n          if (newProgress >= effectiveCost) {\n            if (!updatedResearchedTechIds.includes(techId)) {\n              updatedResearchedTechIds.push(techId);\n            }\n            updatedResearchProgress[techId] = effectiveCost;\n          }\n\n          return {\n            ...p,\n            resources: { ...p.resources, productionPoints: p.resources.productionPoints - pointsToAllocate },\n            researchProgress: updatedResearchProgress,\n            researchedTechIds: updatedResearchedTechIds,\n          };\n        }\n        return p;\n      });\n      return { ...prev, players: updatedPlayers };\n    });\n\n    if ((currentProgress + pointsToAllocate) >= effectiveCost) {\n        toast({ title: \"Research Complete!\", description: `${techToResearch.Name} has been researched.` });\n    } else {\n        toast({ title: \"Research Progress\", description: `${pointsToAllocate} PP allocated to ${techToResearch.Name}.` });\n    }\n  };\n\n  const handleCreateFleet = (targetPosition: HexPosition, shipsToAssign: Array<{ type: string; count: number }>) => {\n    const currentPlayer = gameState.players.find(p => p.id === gameState.currentPlayerId);\n\n    if (!currentPlayer) {\n      toast({ title: \"Fleet Creation Error\", description: \"Current player not found.\", variant: \"destructive\" });\n      return;\n    }\n\n    const validShipsToAssign = shipsToAssign.filter(s => s.count > 0);\n    if (validShipsToAssign.length === 0) {\n      toast({ title: \"Fleet Creation Error\", description: \"No ships selected to assign to the fleet.\", variant: \"destructive\" });\n      return;\n    }\n\n    let canCreate = true;\n    let tempResources = { ...currentPlayer.resources };\n    for (const ship of validShipsToAssign) {\n      if (ship.type === 'Scout' && (tempResources.unassignedScouts || 0) < ship.count) canCreate = false;\n      else if (ship.type === 'Corvette' && (tempResources.unassignedCorvettes || 0) < ship.count) canCreate = false;\n      else if (ship.type === 'ColonyTransport' && (tempResources.unassignedColonyTransports || 0) < ship.count) canCreate = false;\n      if (!canCreate) break;\n    }\n\n    if (!canCreate) {\n      toast({ title: \"Insufficient Ships\", description: \"Not enough unassigned ships of the selected types.\", variant: \"destructive\" });\n      return;\n    }\n\n    setGameState(prev => {\n      const updatedPlayers = prev.players.map(p => {\n        if (p.id === currentPlayer.id) {\n          const updatedResources = { ...p.resources };\n          validShipsToAssign.forEach(ship => {\n            if (ship.type === 'Scout') updatedResources.unassignedScouts = (updatedResources.unassignedScouts || 0) - ship.count;\n            else if (ship.type === 'Corvette') updatedResources.unassignedCorvettes = (updatedResources.unassignedCorvettes || 0) - ship.count;\n            else if (ship.type === 'ColonyTransport') updatedResources.unassignedColonyTransports = (updatedResources.unassignedColonyTransports || 0) - ship.count;\n          });\n          return { ...p, resources: updatedResources };\n        }\n        return p;\n      });\n\n      const newFleet: FleetType = {\n        id: `fleet_${currentPlayer.id}_${Date.now()}`,\n        owner: currentPlayer.id,\n        ships: validShipsToAssign,\n        position: targetPosition,\n      };\n\n      return { ...prev, players: updatedPlayers, fleets: [...prev.fleets, newFleet] };\n    });\n\n    toast({ title: \"Task Force Created!\", description: `New task force assembled at Hex (${targetPosition.col +1}, ${targetPosition.row + 1}).` });\n  };\n\n\n  const handleStarSystemClick = (systemId: string) => {\n    if (isCurrentTurnAProductionGameTurn && !isMovingFleet) {\n        toast({ title: \"Production Turn Actions Only\", description: \"Movement and exploration are not allowed during a production turn.\", variant: \"default\" });\n        return;\n    }\n\n    const clickedSystem = gameState.starSystems.find(s => s.id === systemId);\n    if (!clickedSystem) return;\n\n    const playerFleetInSystem = gameState.fleets.find(f =>\n      f.owner === gameState.currentPlayerId &&\n      f.position.col === clickedSystem.position.col &&\n      f.position.row === clickedSystem.position.row\n    );\n\n    if (!clickedSystem.isExplored && gameState.currentPlayerId && playerFleetInSystem) {\n        let alertMessages: string[] = [];\n        const hasCorvette = playerFleetInSystem.ships.some(s => s.type === 'Corvette' || s.type === 'Fighter' || s.type === 'Death Star');\n        let updatedShips = JSON.parse(JSON.stringify(playerFleetInSystem.ships));\n        let fleetModified = false;\n\n        if (!hasCorvette) {\n            const shipsAtRisk = playerFleetInSystem.ships.filter(s => s.type === 'Scout' || s.type === 'ColonyTransport');\n            shipsAtRisk.forEach(shipType => {\n                for (let i = 0; i < shipType.count; i++) {\n                    const roll = Math.floor(Math.random() * 6) + 1;\n                    if (roll === 1) {\n                        const shipIndex = updatedShips.findIndex((s: { type: string, count: number }) => s.type === shipType.type);\n                        if (shipIndex !== -1 && updatedShips[shipIndex].count > 0) {\n                            updatedShips[shipIndex].count--;\n                            alertMessages.push(`A ${shipType.type} was lost to an anomaly in ${clickedSystem.name}! (Rolled a 1)`);\n                            fleetModified = true;\n                            if (updatedShips[shipIndex].count === 0) {\n                                updatedShips.splice(shipIndex, 1);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n\n        if (fleetModified) {\n            setGameState(prev => ({\n                ...prev,\n                fleets: prev.fleets.map(f => f.id === playerFleetInSystem.id ? { ...f, ships: updatedShips.filter((s: { type: string, count: number }) => s.count > 0) } : f).filter(f => f.ships.length > 0)\n            }));\n        }\n\n        if (alertMessages.length > 0) {\n          toast({\n              title: \"Exploration Hazard!\",\n              description: (\n                  <ScrollArea className=\"h-20\">\n                      {alertMessages.map((msg, i) => <p key={i} className=\"text-xs\">{msg}</p>)}\n                  </ScrollArea>\n              ),\n              variant: \"destructive\"\n          });\n        }\n\n        setGameState(prev => {\n          const updatedSystems = prev.starSystems.map(s => {\n            if (s.id === systemId) {\n              let planetsToAssign: PlanetType[] = [];\n              let cardNoToAssign = s.starCardNo;\n              if (!cardNoToAssign) {\n                  cardNoToAssign = `SC-${Math.floor(Math.random() * 100) + 1}`;\n              }\n              if (s.starColor === 'Blue') {\n                planetsToAssign = [{ id: `${s.id}-p1`, name: `${s.name} I`, type: 'Barren', orbit: 1, maxPopulation: 0, isMineralRich: true }];\n              } else if (s.starColor === 'Green') {\n                 planetsToAssign = [{ id: `${s.id}-p1`, name: `${s.name} I`, type: 'Minimal Terran', orbit: 2, maxPopulation: 10, isMineralRich: false }];\n              } else if (s.starColor === 'Yellow' && Math.random() < 0.3) { \n                 planetsToAssign = [{ id: `${s.id}-p1`, name: `${s.name} I`, type: 'Terran', orbit: Math.floor(Math.random() * 3) + 2, maxPopulation: 50 + Math.floor(Math.random() * 50), isMineralRich: Math.random() < 0.2 }];\n              }\n\n              return {\n                ...s,\n                isExplored: true,\n                owner: gameState.currentPlayerId,\n                starCardNo: cardNoToAssign,\n                planets: s.planets.length > 0 ? s.planets : planetsToAssign\n              };\n            }\n            return s;\n          });\n          return { ...prev, starSystems: updatedSystems };\n        });\n    }\n    setSelectedStarSystemId(prevId => (prevId === systemId ? null : systemId));\n    if (activeManagementPanel && !isCurrentTurnAProductionGameTurn) setActiveManagementPanel(null);\n    if (activeMultiplayerPanel) setActiveMultiplayerPanel(null);\n    if (isMovingFleet) { // If in fleet movement mode, clicking a star system is a move attempt\n        handleMapElementClick(systemId, 'star-system', clickedSystem.position);\n    } else {\n        setSelectedStarSystemId(prevId => (prevId === systemId ? null : systemId));\n        if (activeManagementPanel && !isCurrentTurnAProductionGameTurn) setActiveManagementPanel(null);\n        if (activeMultiplayerPanel) setActiveMultiplayerPanel(null);\n    }\n  };\n  \n  const handleMapElementClick = (id: string | null, type: 'star-system' | 'fleet' | 'hex', position?: HexPosition) => {\n    const currentPlayer = gameState.players.find(p => p.id === gameState.currentPlayerId);\n    if (!currentPlayer || isCurrentTurnAProductionGameTurn) return;\n  \n    if (!isMovingFleet) { // Phase 1: Selecting a fleet to move\n      if (type === 'fleet' && id) {\n        const fleet = gameState.fleets.find(f => f.id === id);\n        if (fleet && fleet.owner === gameState.currentPlayerId) {\n          setSelectedFleetId(id);\n          setIsMovingFleet(true);\n          setSelectedStarSystemId(null); // Deselect star system when selecting fleet\n          setActiveManagementPanel(null);\n          toast({ title: \"Fleet Selected\", description: `Task Force ${id.slice(-4)} ready for orders. Click destination hex.` });\n        } else if (fleet) {\n          toast({ title: \"Cannot Select Fleet\", description: \"This is not your fleet.\", variant: \"destructive\" });\n        }\n      } else if (type === 'star-system' && id) {\n        // Normal star system click for details/exploration if not moving\n        handleStarSystemClick(id);\n      }\n    } else { // Phase 2: Fleet selected, now selecting a destination\n      if ((type === 'hex' || type === 'star-system') && position && selectedFleetId) {\n        const fleetToMove = gameState.fleets.find(f => f.id === selectedFleetId);\n        if (!fleetToMove) {\n          setIsMovingFleet(false);\n          setSelectedFleetId(null);\n          return;\n        }\n  \n        const playerSpeed = calculatePlayerFleetSpeed(currentPlayer, gameState.gameDataItems);\n        const distance = hexDistance(fleetToMove.position, position);\n  \n        // Command Post Range Check (Simplified)\n        let inCommandRange = true;\n        const isScoutFleet = fleetToMove.ships.every(s => s.type === 'Scout'); // True if ONLY scouts\n        if (!isScoutFleet) {\n          const nearestCmdPostDist = Math.min(\n            ...gameState.commandPosts\n              .filter(cp => cp.owner === currentPlayer.id)\n              .map(cp => hexDistance(position, cp.position))\n          );\n          if (nearestCmdPostDist > 8) {\n            inCommandRange = false;\n          }\n        }\n  \n        if (distance <= playerSpeed && inCommandRange) {\n          setGameState(prev => ({\n            ...prev,\n            fleets: prev.fleets.map(f =>\n              f.id === selectedFleetId ? { ...f, position: position! } : f\n            ),\n          }));\n  \n          // Trigger exploration if moved into an unexplored star system\n          if (type === 'star-system' && id) {\n            const targetSystem = gameState.starSystems.find(s => s.id === id);\n            if (targetSystem && !targetSystem.isExplored) {\n                handleStarSystemClick(id); // This will handle exploration logic\n            }\n          }\n          \n          toast({ title: \"Fleet Moved\", description: `Task Force ${selectedFleetId.slice(-4)} moved to (${position.col + 1}, ${position.row + 1}).` });\n        } else if (distance > playerSpeed) {\n          toast({ title: \"Move Failed\", description: `Destination out of range. Max: ${playerSpeed} hexes, Distance: ${distance}.`, variant: \"destructive\" });\n        } else if (!inCommandRange) {\n          toast({ title: \"Move Failed\", description: `Destination is out of command range (8 hexes from nearest command post). Scouts are exempt.`, variant: \"destructive\" });\n        }\n  \n        setIsMovingFleet(false);\n        setSelectedFleetId(null);\n      } else if (type === 'fleet') { // Clicked another fleet or same fleet - cancel move mode\n        setIsMovingFleet(false);\n        setSelectedFleetId(null);\n        toast({ title: \"Movement Cancelled\", description: \"Fleet movement order cancelled.\" });\n      }\n    }\n  };\n\n\n  const currentPlayerForPanel = gameState.players.find(p => p.id === gameState.currentPlayerId);\n  const selectedStarSystem = selectedStarSystemId ? gameState.starSystems.find(s => s.id === selectedStarSystemId) : undefined;\n\n  const turnsUntilProduction = gameState.turn > 0 && !isCurrentTurnAProductionGameTurn ? PRODUCTION_TURN_INTERVAL - (gameState.turn % PRODUCTION_TURN_INTERVAL) : 0;\n\n  if (!isClient || isAttemptingRejoin) {\n    return <div className=\"flex items-center justify-center h-screen bg-background text-foreground\"><Rocket className=\"w-12 h-12 animate-pulse text-primary\" /> <p className=\"ml-4 text-xl\">Loading Stellar Conquest...</p></div>;\n  }\n\n  if (gameState.gameId && (!localUserPlayerId || gameState.players.length === 0 || (gameState.gamePhase === 'playing' && !gameState.currentPlayerId) )) {\n     return <div className=\"flex items-center justify-center h-screen bg-background text-foreground\"><Rocket className=\"w-12 h-12 animate-pulse text-primary\" /> <p className=\"ml-4 text-xl\">Synchronizing Game Data...</p></div>;\n  }\n\n\n  const openMultiplayerPanelUI = (panel: 'create' | 'join') => {\n    setActiveMultiplayerPanel(panel);\n    setActiveManagementPanel(null);\n    setSelectedStarSystemId(null);\n    if (panel === 'join') {\n        fetchPublicGames();\n        setJoiningPlayerName('');\n    }\n  };\n\n\n  return (\n    <div className=\"flex h-screen bg-background text-foreground\">\n        <Sidebar className=\"border-r border-sidebar-border\" collapsible=\"icon\">\n          <SidebarHeader className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <Rocket className=\"w-8 h-8 text-primary\" />\n              <h1 className=\"text-2xl font-bold group-data-[collapsible=icon]:hidden\">Stellar Conquest</h1>\n            </div>\n          </SidebarHeader>\n          <SidebarContent className=\"p-2\">\n            <SidebarMenu>\n              {gameState.gamePhase === 'playing' && gameState.players.length > 0 && (\n                <SidebarMenuItem>\n                  <Card className=\"mb-4 bg-sidebar-accent/30\">\n                      <CardHeader className=\"p-3\">\n                          <CardTitle className=\"text-lg flex items-center justify-between\">\n                              <span>Game Turn: {gameState.turn}</span>\n                              <History className=\"w-5 h-5 text-accent\"/>\n                          </CardTitle>\n                          <CardDescription className=\"group-data-[collapsible=icon]:hidden\">\n                              Player: {currentPlayerForPanel?.name || 'N/A'}\n                          </CardDescription>\n                           <CardDescription className=\"group-data-[collapsible=icon]:hidden\">\n                              {isCurrentTurnAProductionGameTurn ? \"Production Phase!\" : (turnsUntilProduction > 0 ? `Turns until production: ${turnsUntilProduction}`: \"Next turn is production!\")}\n                          </CardDescription>\n                      </CardHeader>\n                  </Card>\n                </SidebarMenuItem>\n              )}\n\n              <SidebarGroup>\n                <SidebarGroupLabel className=\"flex items-center gap-1\"><Users className=\"w-4 h-4\" />Players ({gameState.players.length}/4)</SidebarGroupLabel>\n                {gameState.players.map(player => (\n                  <SidebarMenuItem key={player.id} className=\"group-data-[collapsible=icon]:px-0\">\n                    <div className={`flex items-center justify-between p-2 rounded-md ${player.id === gameState.currentPlayerId ? 'bg-sidebar-primary text-sidebar-primary-foreground' : 'hover:bg-sidebar-accent'}`}>\n                      <span className={`${player.color} group-data-[collapsible=icon]:hidden`}>{player.name}</span>\n                      <Orbit className={`w-4 h-4 ${player.color} ${player.id !== gameState.currentPlayerId ? 'hidden md:hidden group-data-[collapsible=icon]:block group-data-[collapsible=icon]:mx-auto' : 'group-data-[collapsible=icon]:block group-data-[collapsible=icon]:mx-auto'}`} />\n                    </div>\n                  </SidebarMenuItem>\n                ))}\n                 {(gameState.players.length === 0 && (firestoreGameStatus === 'setup' || firestoreGameStatus === 'Cancelled')) && (\n                    <SidebarMenuItem className=\"group-data-[collapsible=icon]:px-0\">\n                        <div className=\"p-2 text-xs text-muted-foreground group-data-[collapsible=icon]:hidden\">No players yet. Create or join a game.</div>\n                    </SidebarMenuItem>\n                )}\n              </SidebarGroup>\n\n              {gameState.gamePhase === 'playing' && (\n                <>\n                  <Separator className=\"my-2 group-data-[collapsible=icon]:hidden\"/>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton\n                        onClick={() => { setIsMovingFleet(prev => !prev); setSelectedFleetId(null); setSelectedStarSystemId(null); setActiveManagementPanel(null); }}\n                        tooltip={isMovingFleet ? \"Cancel Fleet Movement\" : \"Move Fleet\"}\n                        disabled={isCurrentTurnAProductionGameTurn}\n                        variant={isMovingFleet ? \"secondary\" : \"default\"}\n                    >\n                      <Move className=\"w-5 h-5\" />\n                      <span className=\"group-data-[collapsible=icon]:hidden\">{isMovingFleet ? \"Cancel Movement\" : \"Move Fleet\"}</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                   <SidebarMenuItem>\n                    <SidebarMenuButton onClick={() => { setActiveManagementPanel(activeManagementPanel === 'production' ? null : 'production'); setSelectedStarSystemId(null); setActiveMultiplayerPanel(null); setIsMovingFleet(false); setSelectedFleetId(null);}} tooltip=\"Manage Production\">\n                      <Warehouse className=\"w-5 h-5\" />\n                      <span className=\"group-data-[collapsible=icon]:hidden\">Production</span>\n                      <ChevronRight className={`ml-auto h-4 w-4 transition-transform group-data-[collapsible=icon]:hidden ${activeManagementPanel === 'production' ? 'rotate-90' : ''}`} />\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton\n                        onClick={() => { setActiveManagementPanel(activeManagementPanel === 'fleet' ? null : 'fleet'); setSelectedStarSystemId(null); setActiveMultiplayerPanel(null); setIsMovingFleet(false); setSelectedFleetId(null);}}\n                        tooltip=\"Manage Fleets\"\n                    >\n                      <Ship className=\"w-5 h-5\" />\n                      <span className=\"group-data-[collapsible=icon]:hidden\">Fleet Management</span>\n                      <ChevronRight className={`ml-auto h-4 w-4 transition-transform group-data-[collapsible=icon]:hidden ${activeManagementPanel === 'fleet' ? 'rotate-90' : ''}`} />\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton onClick={() => { setActiveManagementPanel(activeManagementPanel === 'colonies' ? null : 'colonies'); setSelectedStarSystemId(null); setActiveMultiplayerPanel(null); setIsMovingFleet(false); setSelectedFleetId(null);}} tooltip=\"Manage Colonies\">\n                      <Factory className=\"w-5 h-5\" />\n                      <span className=\"group-data-[collapsible=icon]:hidden\">Colonies</span>\n                      <ChevronRight className={`ml-auto h-4 w-4 transition-transform group-data-[collapsible=icon]:hidden ${activeManagementPanel === 'colonies' ? 'rotate-90' : ''}`} />\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton onClick={() => {setActiveManagementPanel(activeManagementPanel === 'tech' ? null : 'tech'); setSelectedStarSystemId(null); setActiveMultiplayerPanel(null); setIsMovingFleet(false); setSelectedFleetId(null);}} tooltip=\"Research Tech\">\n                      <FlaskConical className=\"w-5 h-5\" />\n                      <span className=\"group-data-[collapsible=icon]:hidden\">Technology</span>\n                      <ChevronRight className={`ml-auto h-4 w-4 transition-transform group-data-[collapsible=icon]:hidden ${activeManagementPanel === 'tech' ? 'rotate-90' : ''}`} />\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <Separator className=\"my-2 group-data-[collapsible=icon]:hidden\"/>\n                </>\n              )}\n\n              { gameState.gamePhase !== 'playing' && (\n                <>\n                <SidebarGroup>\n                    <SidebarGroupLabel className=\"flex items-center gap-1\"><Network className=\"w-4 h-4\" />Multiplayer</SidebarGroupLabel>\n                    <SidebarMenuItem>\n                        <SidebarMenuButton\n                            onClick={() => openMultiplayerPanelUI('create')}\n                            tooltip=\"Create Game\"\n                            disabled={!!gameState.gameId && (firestoreGameStatus === 'In Progress' || firestoreGameStatus === 'Awaiting Players')}\n                        >\n                            <PlusSquare className=\"w-5 h-5\" />\n                            <span className=\"group-data-[collapsible=icon]:hidden\">Create Game</span>\n                            <ChevronRight className={`ml-auto h-4 w-4 transition-transform group-data-[collapsible=icon]:hidden ${activeMultiplayerPanel === 'create' ? 'rotate-90' : ''}`} />\n                        </SidebarMenuButton>\n                    </SidebarMenuItem>\n                    <SidebarMenuItem>\n                        <SidebarMenuButton\n                            onClick={() => openMultiplayerPanelUI('join')}\n                            tooltip=\"Join Game\"\n                            disabled={!!gameState.gameId && firestoreGameStatus !== 'setup' && firestoreGameStatus !== 'Cancelled'}\n                        >\n                            <LogIn className=\"w-5 h-5\" />\n                            <span className=\"group-data-[collapsible=icon]:hidden\">Join Game</span>\n                            <ChevronRight className={`ml-auto h-4 w-4 transition-transform group-data-[collapsible=icon]:hidden ${activeMultiplayerPanel === 'join' ? 'rotate-90' : ''}`} />\n                        </SidebarMenuButton>\n                    </SidebarMenuItem>\n                </SidebarGroup>\n                <Separator className=\"my-2 group-data-[collapsible=icon]:hidden\"/>\n                </>\n              )}\n\n\n              <SidebarMenuItem>\n                <SidebarMenuButton onClick={() => setIsTutorialOpen(true)} tooltip=\"Tutorial Assistant\">\n                  <Bot className=\"w-5 h-5\" />\n                  <span className=\"group-data-[collapsible=icon]:hidden\">Tutorial AI</span>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n              <SidebarMenuItem>\n                <SidebarMenuButton onClick={() => setShowFogOfWar(!showFogOfWar)} tooltip={showFogOfWar ? \"Disable Detailed Fog\" : \"Enable Detailed Fog\"}>\n                  {showFogOfWar ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                  <span className=\"group-data-[collapsible=icon]:hidden\">Detailed Fog</span>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n            </SidebarMenu>\n          </SidebarContent>\n          <SidebarFooter className=\"p-4\">\n            {gameState.gamePhase === 'playing' && gameState.players.length > 0 && (\n              <Button\n                onClick={handleEndTurn}\n                className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground group-data-[collapsible=icon]:px-2\"\n                disabled={\n                  !localUserPlayerId ||\n                  gameState.currentPlayerId !== localUserPlayerId ||\n                  isEndingTurn ||\n                  gameState.gamePhase !== 'playing'\n                }\n              >\n                {isEndingTurn ? (\n                  <Loader2 className=\"w-5 h-5 mr-1 animate-spin group-data-[collapsible=icon]:mr-0\" />\n                ) : (\n                  <ChevronRight className=\"w-5 h-5 mr-1 group-data-[collapsible=icon]:mr-0\" />\n                )}\n                <span className=\"group-data-[collapsible=icon]:hidden\">\n                  {isEndingTurn ? 'Ending...' : (isCurrentTurnAProductionGameTurn ? 'End Production Actions' : 'End Player Turn')}\n                </span>\n              </Button>\n            )}\n          </SidebarFooter>\n        </Sidebar>\n\n      <SidebarInset className=\"flex-1 flex flex-col overflow-hidden\">\n        <header className=\"p-4 border-b border-border flex items-center justify-between bg-background\">\n          <div className=\"flex items-center gap-2\">\n            <SidebarTrigger className=\"md:hidden\">\n                <PanelLeft />\n            </SidebarTrigger>\n            <h2 className=\"text-xl font-semibold text-foreground\">\n                {isMovingFleet ? `Moving Fleet: ${selectedFleetId ? '...' + selectedFleetId.slice(-4) : 'Select Destination'}` : (isCurrentTurnAProductionGameTurn ? 'Galactic Production Phase' : 'Galactic Map')}\n            </h2>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"w-5 h-5 text-muted-foreground hover:text-foreground cursor-pointer\" />\n          </div>\n        </header>\n\n        <main className=\"flex-1 flex p-1 md:p-2 gap-1 md:gap-2 overflow-hidden\">\n            <div\n              className=\"flex-1 h-full rounded-lg shadow-inner overflow-auto bg-cover bg-center bg-no-repeat\"\n              style={{ backgroundImage: \"url('https://i.imgur.com/75lZ0EJ.jpeg')\" }}\n            >\n                 <StarMap\n                    starSystems={gameState.starSystems}\n                    fleets={gameState.fleets}\n                    commandPosts={gameState.commandPosts}\n                    dustClouds={gameState.dustClouds}\n                    entryPoints={gameState.entryPoints}\n                    visualMapLabels={gameState.visualMapLabels}\n                    mapSettings={gameState.mapSettings}\n                    showFogOfWar={showFogOfWar}\n                    currentPlayerId={gameState.currentPlayerId || ''}\n                    players={gameState.players}\n                    selectedStarSystemId={selectedStarSystemId}\n                    onStarSystemClick={handleStarSystemClick}\n                    onMapElementClick={handleMapElementClick}\n                    isProductionTurn={isCurrentTurnAProductionGameTurn}\n                    selectedFleetId={selectedFleetId}\n                    isMovingFleet={isMovingFleet}\n                  />\n            </div>\n\n            {activeMultiplayerPanel && !selectedStarSystemId && gameState.gamePhase !== 'playing' && (\n              <MultiplayerPanel\n                activePanel={activeMultiplayerPanel}\n                setActivePanel={setActiveMultiplayerPanel}\n                createdGameCode={createdGameCode}\n                hostName={hostName}\n                setHostName={setHostName}\n                isPrivateGame={isPrivateGame}\n                setIsPrivateGame={setIsPrivateGame}\n                joinGameCode={joinGameCode}\n                setJoinGameCode={setJoinGameCode}\n                joiningPlayerName={joiningPlayerName}\n                setJoiningPlayerName={setJoiningPlayerName}\n                publicGamesList={publicGamesList}\n                isLoadingPublicGames={isLoadingPublicGames}\n                firestoreGameStatus={firestoreGameStatus}\n                localPlayers={gameState.players}\n                handleCreateGameSession={handleCreateGameSession}\n                handleJoinGame={handleJoinGame}\n                handleJoinListedGame={handleJoinListedGame}\n                handleStartGame={handleStartGame}\n                handleCancelGame={handleCancelGame}\n              />\n            )}\n\n            {!activeMultiplayerPanel && activeManagementPanel && !selectedStarSystemId && gameState.gamePhase === 'playing' && (\n              <ManagementInfoPanel\n                activePanel={activeManagementPanel}\n                gameState={gameState}\n                currentPlayer={currentPlayerForPanel}\n                onClose={() => setActiveManagementPanel(null)}\n                isProductionTurn={isCurrentTurnAProductionGameTurn}\n                onBuildItem={handleBuildItem}\n                onAllocateResearch={handleAllocateResearch}\n                onCreateFleet={handleCreateFleet}\n              />\n            )}\n\n            {!activeMultiplayerPanel && selectedStarSystem && gameState.gamePhase === 'playing' &&\n             !((isCurrentTurnAProductionGameTurn && activeManagementPanel === 'production') || (isCurrentTurnAProductionGameTurn && activeManagementPanel === 'tech')) &&\n            (\n              <StarSystemDetailsPanel\n                selectedStarSystem={selectedStarSystem}\n                players={gameState.players}\n                showFogOfWar={showFogOfWar}\n                onClose={() => setSelectedStarSystemId(null)}\n                isProductionTurn={isCurrentTurnAProductionGameTurn}\n              />\n            )}\n\n        </main>\n      </SidebarInset>\n      <TutorialAssistantDialog open={isTutorialOpen} onOpenChange={setIsTutorialOpen} />\n    </div>\n  );\n};\n\nexport default GameClient;\n"],"names":[],"mappings":"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","debugId":null}}]
}